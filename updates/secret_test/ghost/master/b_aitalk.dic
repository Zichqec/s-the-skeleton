OnAiTalk
{
	// if STRLEN(offscreen) == 0
	// {
		if CHAIN.IDName == ""
		{
			lastTalk = RandomTalk
		}
		else
		{
			lastTalk = ChainTalk
		}
		lastTalk
	// }
	// else
	// { 
		// OffscreenTalk(ANY(offscreen))
	// }
}

RandomTalk : nonoverlap
{
	_candidates = IARRAY
	foreach RandomTalkEx; _dialogue
	{
		_found = 0
		if "\![narration-only]" _in_ _dialogue
		{
			_found = 1
		}
		else
		{
			foreach WhichArentPopped; _emotion
			{
				_emotion = "\![" + Capitalize(_emotion) + "-start]"
				if _emotion _in_ _dialogue; {_found = 1; break}
			}
		}
		if _found; _candidates ,= _dialogue
	}
	parallel _candidates
}

RandomTalkEx : array_pool
{
	//"bloons"
	
	//————— Dialogues that will work no matter what balloons are popped —————
	"\![narration-only]%(untalk)(They seem content to float here.)\w8"
	"%(happy)Bubble,\w4 bubble,\w4 bubble!\w8 %(happyoff)%(confused)What's in the pot??\w8\n\n%(confusedoff)%(pot)"
	
	//————— Dialogues for individual balloons —————
	"%(shy)Uhm... I... N-nevermind...\w8%(shyoff)"
	"%(shy)Rub rub...\w8%(shyoff)"
	
	"%(unamused)wow this is great\w8%(unamusedoff)"
	"%(unamused)yawn\w8%(unamusedoff)"
	
	"%(scared)Should we say something about all of these papers everywhere?\w8 No,\w4 no,\w4 stop it,\w4 that isn't any of our business.\w8%(scaredoff)"
	"%(scared)Oh no,\w4 are our strings getting tangled?\w8 Careful,\w4 don't pull too hard...\w8 No,\w4 we're okay.\w8%(scaredoff)"
	"%(scared)Are we h-h-haunted?\w8%(scaredoff)"
	
	"%(sad)... squeak...\w8%(sadoff)"
	
	"%(confused)Did you say something??\w8 No???\w8 Did I?\w8 I can't remember??\w8%(confusedoff)"
	"%(confused)Did you know?\w8 Balloons?\w8 Can look like %(bloonshape)??\w8%(confusedoff)"
	
	"%(happy)Float,\w4 float,\w4 float!\w8%(happyoff)"
	"%(happy)Hey!!!\w8 Watch my mouth move!\w8 Auuuguuu gobbledygook mucky mook put the duckie in the brook!!\w8%(happyoff)\n\n(It's given itself a case of the giggles.)"
	
	"%(angry)DON'T EVEN THINK ABOUT POKING ME!\w8%(angryoff)"
	
	"%(think)I wonder,\w4 what time is it at home?\w8 If it is %(nowhour):%(nowmin) here,\w4 then...\w8%(thinkoff)"
	"%(think)Bounce and bob.\w8%(thinkoff)"
	"%(think)How many of us are here?\w8 I wonder.\w8%(thinkoff)"
	"%(think)Do you believe that a balloon can also be %(bloonbe)?\w8%(thinkoff)"
	
	//————— Dialogues that require groups of balloons —————
	
	"%(happy)Hum dee dum~\w8 %(happyoff)%(confused)Hum dee doo??\w8 %(confusedoff)%(shy)H-hum deedle... deedle...\w8 %(shyoff)%(sad)dee...\w8\n\n%(sadoff)(They're all humming together.)"
	
	"%(happy)Oh!\w8 We should play a game!!\w8 %(happyoff)%(sad)...\w8 but...\w8 i don't have a pen...\w8 all the games i know need a pen... \w8%(sadoff)%(unamused)forget it,\w4 i don't like games anyway\w8%(unamusedoff)"
	
	"%(sad)pop... pop... pop...\w8 %(sadoff)%(angry)POP!\w8%(angryoff)%(unamused)\n\ni'm not even popped right now%(unamusedoff)"
	

	
	
	

	
	//User Environment Ifs
	//---Timeslots---
	if timeslot == "earlymorning" //5am - 8am
	{
		
	}
	if timeslot == "morning" //9am - 11am
	{
		
	}
	if timeslot == "lunch" //12pm - 2pm
	{
		
	}
	if timeslot == "afternoon" //3pm - 5pm
	{
		
	}
	if timeslot == "evening" //6pm - 8pm
	{
		
	}
	if timeslot == "latenight" //9pm - 11am
	{
		
	}
	if timeslot == "midnight" //12am - 4am
	{
		
	}
	
	//---Days of the week---
	if wd == "Sun"
	{
		
	}
	if wd == "Mon"
	{
		
	}
	if wd == "Tue"
	{
		
	}
	if wd == "Wed"
	{
		
	}
	if wd == "Thu"
	{
		
	}
	if wd == "Fri"
	{
		
	}
	if wd == "Sat"
	{
		
	}
	
	//---Days in the month---
	if day < 5 //4th and before, start of the month
	{
		
	}
	if day > 13 && day < 17 //14th-16th, halfway through
	{
		
	}
	if day > 26 //27th and after, end of the month
	{
		
	}
	
	//---Months---
	if month == 1
	{
		
	}
	if month == 2
	{
		
	}
	if month == 3 //Spring start Northern, Autumn start Southern
	{
		
	}
	if month == 4
	{
		
	}
	if month == 5
	{
		
	}
	if month == 6 //Summer start Northern, Winter start Southern
	{
		
	}
	if month == 7
	{
		
	}
	if month == 8
	{
		
	}
	if month == 9 //Autumn start Northern, Spring start Southern
	{
		
	}
	if month == 10
	{
		
	}
	if month == 11
	{
		
	}
	if month == 12 //Winter start Northern, Summer start Southern
	{
		
	}
	
	//---Seasons---
	if season == "Spring"
	{
		
	}
	if season == "Summer"
	{
		
	}
	if season == "Autumn"
	{
		
	}
	if season == "Winter"
	{
		
	}
	
	//---Noticing and commenting on other ghosts---
	//Remember that you have to check for the sakura name of another ghost, not the ghost name.
	if "Needle" _in_ ghostexlist
	{
		"%(unamused)don't even think about it, needle\w8 %(unamusedoff)%(happy)Oh!\w8 We could play the poke game!\w8%(happyoff)"
	}
	
}

//-----------Chains-----------

//Example of a chain. The dialogues will play in order each time the ghost talks until it reaches chain=end.
achain
{{CHAIN
	"\0%(s0)Here's another part of the chain!\e"
	"\0%(s0)Here's a third part of the chain!\e"
	"\0%(s0)Here's a fourth part of the chain!\e"
	"\0%(s0)Here's the end of the chain!\e:chain=end"
}}CHAIN


//-----------Timekeeping systems and related dialogue-----------

OnMinuteChange
{
	if hour == 0 && minute == 0; AutoUpdates[1] = 0 //Resetting auto updates
	
	if minute == 0
	{
		if hour == 0 && day == 0 && month == 0 //New year's
		{
			if !HappyIsPopped; "Happy new year!\n\n"
			else; PoppedDialogue("Happy")
		}
		elseif HourNotifs == "On" //Top of the hour notifications
		{
			if hour == 0
			{
				"It's midnight."
			}
			elseif hour == 12
			{
				"It's noon."
			}
			else
			{
				"It's %(hour12) o'clock."
			}
		}
	}
	// elseif ARRAYSIZE(offscreen) > 0 //If the ghost is off the screen, it will run the off screen dialogue every minute
 	// {
 		// OffscreenTalk
	// }
	--
	if SomeArePopped && !BalloonIsOpen
	{
		_which = WhichArePopped
		_bring_back = ANY(_which)
		
		//EVAL("%(_bring_back)IsPopped = 0")
		
		//if BalloonIsOpen; "\C" //TODO this won't fix if another event interrupts this one...
		--
		"\![embed,OnUnpop%(_bring_back)]"
		--
		//"(...Looks like it's back.)"
	}
	--
	if AutoUpdates[0] == "On" && AutoUpdates[1] == 0 //Once a day the ghost will check for updates if the user has auto updates on
	{
		AutoUpdates[1] = 1
		"\![updatebymyself,checkonly]"
	}
	
}

// OnOffscreen
// {
	// //I've tinkered a lot with this function to get it working for multiple characters. If you need more than 2, just copy the format below very carefully, and make sure you increment the numbers. It's not perfect; if you have multiple characters off screen at once it might pick the wrong dialogues, but you can add more elseifs to handle those cases if you really want them.
	// offscreen = TOSTR(reference0)
	// CVSTR(reference0)
	// CVSTR(reference1)
	// if !("__VERY_FIRST_BOOT__" _in_ SHIORI3FW.LastTalk) //Bandaid patch, hoping this is a bug in SSP that can be fixed there
	// {	
		// if "0" _in_ reference0 //Checks if the sakura was moved off screen
		// {
			// OffscreenTalk("0")
		// }
		// elseif "1" _in_ reference0 //Checks if the kero was moved off screen
		// {
			// OffscreenTalk("1")
		// }
		
		// //Coming back on screen
		// elseif "0" _in_ reference1 //Checks if the sakura is no longer off screen
		// {
			// EndOffscreenTalk("0")
		// }
		// elseif "1" _in_ reference1 //Checks if the kero is no longer off screen
		// {
			// EndOffscreenTalk("1")
		// }
	// }
// }

// //Off the screen dialogue. Ctrl Shift F12 will bring characters back onto the screen. _argv[0] here contains the number of the character who is off screen, 0 for sakura, 1 for kero, 2 and up for extra chars
// OffscreenTalk
// {
	// if _argv[0] == "0" //If the sakura is off screen
	// {
		// "\0%(s0)I'm off the screen.\w8\w8 You can press Ctrl Shift F12 to bring me back.\e"
	// }
	// elseif _argv[0] == "1" //If the kero is off screen
	// {
		// "\0%(s0)The kero is off the screen.\w8\w8 You can press Ctrl Shift F12 to bring it back.\e"
	// }
// }

// //Being brought back on the screen. _argv[0] here contains the number of the character who was brought back on screen, 0 for sakura, 1 for kero, 2 and up for extra chars
// EndOffscreenTalk
// {
	// if _argv[0] == "0" //If the sakura was brought back on screen
	// {
		// "\0%(s0)I'm back!\e"
	// }
	// elseif _argv[0] == "1" //If the kero was brought back on screen
	// {
		// "\0%(s0)The kero is back!\e"
	// }
// }

//OnSurfaceRestore happens around 30 seconds after the ghost's last dialogue. reference0 here stores the number of the previous surface, so you can have them comment when they change back if you like.
OnSurfaceRestore : all
{
	if SHIORI3FW.IsVisible[1]; "\1\s[-1]"
	
	if !SHIORI3FW.IsVisible[0]; "\0%(s0)"
	"\![set,alpha,100]"
}

s0 : all
{
	"\0\s[0]"
	"\![set,alpha,100]"
	
	if ShyIsPopped; "\i[2003]"
	if UnamusedIsPopped; "\i[2103]"
	if ScaredIsPopped; "\i[2203]"
	if SadIsPopped; "\i[2303]"
	if ConfusedIsPopped; "\i[2403]"
	if HappyIsPopped; "\i[2503]"
	if AngryIsPopped; "\i[2603]"
	if ThinkIsPopped; "\i[2703]"
}