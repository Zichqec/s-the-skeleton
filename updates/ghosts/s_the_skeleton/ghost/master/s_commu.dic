OnCommunicate
{
	"\![no-autopause]"
	--
	LOGGING("From %(reference0)!")
	if "GetSStats" _in_ reference1 //Generic stat request
	{
		ConvoTag = SPLIT(reference1,"\e")[1]
		CurrentPos[4] = reference0 //Ghost that sent the ping
		
		"\![get,property,OnSendStats,currentghost.scope(0).x,currentghost.scope(0).y,currentghost.scope(1).x,currentghost.scope(1).y]"	
	}
	elseif "DustyGetStatsBoot" _in_ reference1
	{
		res_reference0 = "Dusty"
		
		"\e %(nowmode),%(LV), GiveStatsBoot"
	}
	elseif nowmode == "RYS"
	{
		//Why is this here??? idk, investigate later. Duped it down below so it works...
		res_reference0 = ""
		if ghostexcount > 0 //Checking to see if there's another ghost
		{
			if ASEARCH(reference0,RYSMetGhosts) == -1
			{
				RYSMetGhosts ,= reference0
			}
			"\RYS\s[2007]* (He seems afraid of %(reference0).)\e"
		}
		else
		{
			"\RYS\s[2007]* (He fidgets.)\w8\w8\n\n\s[2006]Um,\w4 nobody else is here...\e"
		}
	}
	elseif nowmode == "Asleep"
	{
		res_reference0 = ""
		"\0\s[1300]* (He continues sleeping,\w4 unaware...)\e"
	}
	elseif holdingObsidian == 1 && reference0 != "Dusty"
	{
		"\0\s[1201]* (He's paying close attention to the cat,\w4 he didn't notice %(reference0)...)\e"
	}
 	else
	{
 		//---- answering another ghost
		if LV == 0
		{
			if ASEARCH(reference0,MetGhosts) == -1
			{
				MetGhosts ,= reference0
			}
			ReplyToGhost
		}
		else
		{
			if LVCheck == 1
			{
				res_reference0 = ""
				if ghostexcount > 0 //Checking to see if there's another ghost
				{
					"\0\s[510]* (He tries to stay out of %(reference0)'s sight.)\e"
				}
				else
				{
					"\0\s[510]...Nobody else is here.\e"
				}
			}
			else
			{
				res_reference0 = ""
				if ghostexcount > 0 //Checking to see if there's another ghost
				{
					"\0\s[410]* (He doesn't seem to have noticed %(reference0).)\e"
				}
				else
				{
					"\0\s[410]Hmph,\w4 nobody else is even here.\e"
				}
			}
		}
 	}
}



OnStartTalking //Starting conversations
{
	_ghost = ANY(ghostexlist)
	if reference0 != ""; _ghost = reference0 //If this was a manual ping
	"\![no-autopause]"
	--
	if nowmode == "RYS"
	{
		//Why is this here??? idk, investigate later. Duped it down below so it works...
		res_reference0 = ""
		if ghostexcount > 0 //Checking to see if there's another ghost
		{
			if ASEARCH(reference0,RYSMetGhosts) == -1
			{
				RYSMetGhosts ,= reference0
			}
			"\RYS\s[2007]* (He seems afraid of %(_ghost).)\e"
		}
		else
		{
			"\RYS\s[2007]* (He fidgets.)\w8\w8\n\n\s[2006]Um,\w4 nobody else is here...\e"
		}
	}
	else
	{
		if ghostexcount > 0 //Checking to see if there's another ghost
		{
			case _ghost
			{
				when "Dusty"
				{
					if talkedtoDusty == 0 //if they haven't seen each other before
					{
						res_reference0 = "Dusty"
						talkedtoDusty = 1
						"\0\s[110]Oh!\w8\w8 Dusty,\w4 is that you?\w8\w8\s[101] I didn't realize you could survive in a place like this.\w8\w8\e SFirstHelloS01"
					}
					else //After they've seen each other
					{
						"\0\s[104]It's pretty nice that you can exist here,\w4 huh?\w8\w8\s[101] It's got to be better than the void,\w4 anyways.\w8\w8\e NicerThanVoidS01"
						res_reference0 = "Dusty"
					}
				}
				when "Azura" //=======Azura========
				{
					res_reference0 = "Azura"
					talkedtoAzura = 1
					
					"\s[103]Hey %(res_reference0),\w4\s[0] what are you doing?\e"
				}
				when "Gaster" //=========Zarla's Gaster=======
				{
					res_reference0 = ""
					"\0\s[200].\w4.\w4.\w8\w8\n\n* (Doesn't seem like he wants to talk to %(_ghost).)\e"
				}
				when "Temmie"
				{
					res_reference0 = "Temmie"
					"\0\s[104]Hello Temmie!\w8\w8\e"
				}
				when "MiniDev"
				{
					//S will check MiniDev's outfit, if S is in the correct shell and hasn't already done this
					if MiniDevSOutf != 1 && (nowshell == "red_hoodie" || nowshell == "pink_apron")
					{
						res_reference0 = "MiniDev"
						"\e GetMiniDevStats01"
					}
					else
					{
						res_reference0 = "MiniDev"
						"\0\s[104]Hey,\w4 MiniDev.\e"
					}
				}
				when "Hydrate"
				{
					"\0\s[110]* (He's staring at Hydrate...)\w8\w8\n\n* (Maybe you should give him some water.)\e"
				}
				when "Lulo"
				{
					res_reference0 = "Lulo"
					
					"\e GetLuloStats"
				}
				when "Dusty"
				{
					res_reference0 = "Dusty"
					
					"\e GetDustyStats"
				}
				others //======Any ghost he doesn't know========
				{
					//SHIORI3FW.SetDelayEvent('LoopPrevention',5)
					commuTimer = 10
					AlreadyResponded = 1
					res_reference0 = _ghost
					
					"\0\s[104]Hey,\w4 %(res_reference0).\w8\w8\e"
				}
			}
		}
		else //If there is no other ghost
		{
			"\0\s[106]Ah,\w4 I don't think anyone else is here,\w4 kiddo.\e"
		}
	}
}

ReplyToGhost //Replying to conversations
{
	speech = SPLIT(reference1,"\e")[0] //This is everything the ghost said that the user can see
	ConvoTag = SPLIT(reference1,"\e")[1] //This is everything after the \e, which will be the invisible tags that track the conversation
	_Last = SPLIT(ConvoTag,"::")[1] //The other ghost sends "::%(speech)" at the end of every communication, so this grabs what THIS ghost last said. See below.
	
	_Last = RemovePauses(_Last)  //removes any \w tags and quicksection tags
	_Last = REPLACE(_Last,":chain=end","")
	"\![commu-%(reference0)]" //tag for noninterrupting system; shouldn't show in dialogue
	
	_f = "left"; if "Facing:left" _in_ ConvoTag; _f = "right" //If the other ghost is facing left, face this one right. Left by default
	--
	
	if "SentLuloStats" _in_ ConvoTag //Receiving stats from Lulo
	{
		res_reference0 = "Lulo"
		LuloMode = ConvoTag[1]
		if TOINT(ConvoTag[13]) > XCoord; _f = "right" //If Lulo is to his right
		--
		"%(LuloConversationPool)"
		--
		" Facing:%(_f)::%(speech)"
	}
	elseif "Dusty-S-Lulo" _in_ ConvoTag //3 way convos
	{
		"%(DustySLulo)"
	}
	elseif reference0 == "X. Template"
	{
		// "\![quicksection,true]%(_Last)\![quicksection,false]"
		// --
		// if "Test00" _in_ ConvoTag
		// {
			// res_reference0 = "X. Template"
			// "\n\nResponse 1\e Test01"
		// }
		// elseif "Test02" _in_ ConvoTag
		// {
			// res_reference0 = "X. Template"
			// "\n\nResponse 2\e Test03"
		// }
		// else
		// {
			// res_reference0 = ""
			// "\n\nElse.\e"
		// }
		// --
		// "::%(speech)"
		res_reference0 = "X. Template"
		"Hell yeah it's loop time\e"
	}
	elseif reference0 == "Dusty" //=======Conversations with Dusty=========
	{
		"\![quicksection,true]%(_Last)\![quicksection,false]"
		--
		"%(TalkToDusty)"
		--
		"::%(speech)"
	}
	elseif reference0 == "Azura" //=======Conversations with Azura=========
	{
		_azuraspeech = TOLOWER(speech)
		"%(TalkToAzura)"
	}
	elseif reference0 == "Liah"
	{
		"\![quicksection,true]%(_Last)\![quicksection,false]" //Displays his last text instantly so you don't notice that he's repeated it
		--
		"%(TalkToLiah)"
		--
		"::%(speech)"
	}
	elseif reference0 == "Temmie"
	{
		res_reference0 = ""
		talkedtoTemmie = 1
		"\0\s[106]Sorry,\w4 I don't have any muns or flakes with me.\w8\w8\s[104] Maybe next time,\w4 huh?\e"
	}
	elseif reference0 == "MiniDev" //=============Conversations with MiniDev=================
	{
		"%(TalkToMiniDev)"
	}
	elseif reference0 == "Lulo"
	{
		res_reference0 = "Lulo"
		"\![quicksection,true]%(_Last)\![quicksection,false]"
		--
		"%(TalkToLulo)"
		--
		" Facing:%(_f)::%(speech)"
	}
	elseif reference0 == "Gaster"
	{
		if "\i[108]" _in_ reference1 || "\i[109]" _in_ reference1 || "\i[110]" _in_ reference1 || "\i[111]" _in_ reference1
		{
			res_reference0 = ""
			if ASEARCH("Seen Gaster with googly eyes",MiscFlags) == -1 //miscflags[0] == 0
			{
				MiscFlags ,= "Seen Gaster with googly eyes"
				
				"\0\s[110].\w8.\w8.\w8\s[111]Oh my god,\w4 %(username) did you do that?\w8\w8\s[104] That's amazing.\e"
			}
			else
			{
				"\0\s[104]* (He tries to hide it,\w4 but he's cracking up about the googly eyes.)\e"
				"\0\s[104]Heheh,\w4 that's amazing.\e"
				"\0\s[103]...I could watch this guy all day.\e"
				"\0\s[103]So many things in this world are made way better by googly eyes.\e"
			}
		}
		else
		{
			res_reference0 = ""
			
			if ASEARCH("Seen Gaster with googly eyes",MiscFlags) != -1
			{
				"\0\s[106]He's much easier to deal with when he's got the googly eyes on, y'know.\e"
				"\0\s[106]Aw,\w4 bring the googly eyes back.\e"
				"\0\s[104]* (Looks like he's still cracking up,\w4 thinking about the googly eyes.)\e"
			}
			else
			{
				"\0\s[410]Tsk.\e"
				"\0\s[410]Shut up.\e"
				"\0\s[410]Don't call me that.\e"
				"\0\s[410]I don't want to talk to you.\e"
				"\0\s[410]You're not worth my time.\e"
			}
		}
	}
	elseif reference0 == "Hydrate"
	{
		"%(TalkToHydrate)"
	}
	else //=========Ghosts he doesn't know==========
	{
		if AlreadyResponded == 0
		{
			//SHIORI3FW.SetDelayEvent('LoopPrevention',5)
			commuTimer = 10
			AlreadyResponded = 1
			res_reference0 = reference0
			
			"\0\s[104]Hey there.\w8\w8\e"
			"\0\s[104]Hello.\w8\w8\e"
		}
		else
		{
			AlreadyResponded = 0
			res_reference0 = ""
			
			"\0\s[0]Hope you're doing well.\e"
			"\0\s[205]What's up?\e"
			"\0\s[205]How're you doing,\w4 %(reference0)?\e"
			"\0\s[104]Good to meet you.\e"
		}
	}
}

TalkToDusty
{
	//---Dusty notices S---
	if "DFirstHelloD01" _in_ ConvoTag
	{
		talkedtoDusty = 1
		"\0\s[110]Oh!\w8\w8\s[104] I didn't realize you could come here,\w4 Dusty.\w8\w8 "
		--
		if totalhours > 20
		{
			"\s[0]Yeah,\w4 I spend a lot of time here."
		}
		else
		{
			"\s[106]I'm not really too sure how I got here,\w4 but uh,\w4 yeah I guess."
		}
		--
		"\w8\w8\e DFirstHelloS01"
		res_reference0 = "Dusty"
	}
	elseif "DFirstHelloD02" _in_ ConvoTag
	{
		res_reference0 = ""
		"\0\n\n\s[104]Sounds good to me.\e"
	}
	
	//---S notices Dusty---
	elseif "SFirstHelloD01" _in_ ConvoTag
	{
		"\0\n\n\s[104]Well that's good to see,\w4 maybe if we're lucky I'll bump into you here more often,\w4 huh?\w8\w8\e SFirstHelloS02"
		res_reference0 = "Dusty"
	}
	
	//---Obsidian meows at S---
	elseif "ObsiSaysHiD01" _in_ ConvoTag
	{
		"\0\s[104]Hello to you too,\w4 Obsidian.\w8\w8 Keeping Dusty company?\w8\w8\e ObsiSaysHiS01"
		res_reference0 = "Dusty"
	}
	
	//Dusty asks how S is doing
	elseif "HowsSDoingD01" _in_ ConvoTag
	{
		"\0\s[109]I'm getting pretty tired,\w4 honestly.\w8\w8\e HowsSDoingS01"
		res_reference0 = "Dusty"
	}
	elseif "HowsSDoingD02" _in_ ConvoTag
	{
		"\0\n\n\s[106]Ah,\w4 I'll pass for the moment,\w4\s[104] but thank you.\e"
		res_reference0 = ""
	}
	elseif "GetSStats1" _in_ ConvoTag
	{
		"\e %(passhour),%(thesplit),%(love),%(LV),%(pethighscore),%(totalpets), SGiveStats1"
		res_reference0 = "Dusty"
	}
	elseif "GiveCoords01" _in_ ConvoTag
	{
		"\![get,property,OnFacingCoords,currentghost.scope(0).rect]"
	}
	
	//---This is nicer than the void isn't it?---
	elseif "NicerThanVoidD01" _in_ ConvoTag
	{
		if ghostexcount > 1 //If there's more than just the two of them
		{
			"\0\n\n\s[103]It's great that you get to meet more people here,\w4 too.\w8\w8\e NicerThanVoidS02a"
		}
		else
		{
			"\0\n\n\s[205]I'm just glad we're not alone here,\w4 it's still kinda lonely here when you're by yourself.\w8\w8\e NicerThanVoidS02b"
		}
		--
		res_reference0 = "Dusty"
	}
	elseif "NicerThanVoidD02a" _in_ ConvoTag
	{
		"\0\n\n\s[202]Heh,\w4 she'll have to get over it.\w8\w8\s[102] Besides,\w4 I'm sure she'll get plenty of extra attention when you go back,\w4 right?\w8\w8\e NicerThanVoidS03a"
		res_reference0 = "Dusty"
	}
	elseif "NicerThanVoidD02b" _in_ ConvoTag
	{
		"\0\n\n\s[1020]Aw geez,\w4 I'm just glad I can help...\e"
		res_reference0 = ""
	}
	
	
	//user complimented S and mentioned Dusty
	elseif "SUserComplimentedD01" _in_ ConvoTag
	{
		"\0\n\n\s[1030]C-c'mon,\w4 knock it off you guys...\w8\w8\e"
		res_reference0 = ""
	}
	elseif "SpaceAndTimeD01" _in_ ConvoTag
	{
		"\0\n\n\s[1100]I didn't \f[italic,true]say\f[italic,false] anything..!\w8\w8\e SpaceAndTimeS02"
		res_reference0 = "Dusty"
	}
	elseif "SpaceAndTimeD02" _in_ ConvoTag
	{
		"\0\n\n\s[206]Sorry,\w4 it's just-\w4\e SpaceAndTimeS03"
		res_reference0 = "Dusty"
	}
	
	//Dusty booting and noticing S
	elseif "DustyBootS1" _in_ ConvoTag
	{
		"\0\s[104]Hey,\w4 Dusty.\w8\w8\s[0] Glad to see you.\e"
		res_reference0 = ""
	}
	elseif "DustyDragCoords01" _in_ ConvoTag
	{
		"\![get,property,OnDustyDragCoords,currentghost.scope(0).rect]"
	}
	elseif "CanYouHoldObsidian? 0" _in_ ConvoTag
	{
		heldObsidian++
		holdingObsidian = 1
		lookingatphone = 0
		currentlydrinking = 0
		res_reference0 = "Dusty"
		"\e SPickupObsi01"
	}
	elseif "SPickupObsi02" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		"\0\s[1201]Aw,\w4 hi Obsidian.\w8\w8\e SPickupObsi03"
	}
	elseif "SObsiJumpDown01" _in_ ConvoTag
	{
		"\0\s[1201]\![get,property,OnObsidianJumpDown,currentghost.scope(0).rect]"
	}
	elseif "SObsiJumpDown03" _in_ ConvoTag
	{
		res_reference0 = ""
		holdingObsidian = 0
		"\0\s[104]Aw,\w4 alright then.\e"
	}
	elseif "SObsidianLikes02" _in_ ConvoTag
	{
		res_reference0 = ""
		"\0\s[1207]\n\n...You have a point.\e"
	}
	elseif "DGoodObsiTime" _in_ ConvoTag
	{
		res_reference0 = ""
		
		"\0\s[1204]Heh,\w4 yeah.\w8\w8\s[1201] So am I,\w4 honestly.\e"
	}
	elseif "DGetAlongObsi" _in_ ConvoTag
	{
		res_reference0 = ""
		
		"\0\s[1204]Aw,\w4 I always get along with cats if they're fine with me.\e"
	}
	elseif "DustyGetStatsBoot" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\e %(nowmode),%(LV), GiveStatsBoot"
	}
	elseif "S-Dusty-RudeToTalk-D01" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\0\s[101]Aw,\w4 c'mon,\w4 Dusty.\w8\w8 I want to hear it.\w8\w8\e S-Dusty-RudeToTalk-S01"
	}
	elseif "S-Dusty-RudeToTalk-D02" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\0\n\n\s[101]What are you planning to tell %(username) when I'm not here,\w4 huh?\w8\w8 Have you got some dirt on me that I don't know about?\w8\w8\e S-Dusty-RudeToTalk-S02"
	}
	elseif "S-Dusty-RudeToTalk-D03" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\0\n\n\s[110]Wait-\w8 what?\w8\w8\s[208] Hey!\w8\w8 You can't just leave me hanging like that!\w8\w8\e S-Dusty-RudeToTalk-S03"
	}
	elseif "S-Dusty-OverlapA-D01" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\0\s[110]Uff-!\w8\w8\s[1020] Ah,\w4 sorry Dusty.\w8\w8\s[106] Think you could be a little more careful not to push us into each other,\w4 %(username)?\w8\w8\e S-Dusty-OverlapA-S01"
	}
	elseif "S-Dusty-OverlapA-D02" _in_ ConvoTag
	{
		res_reference0 = ""
		
		"\0\n\n\s[107]\![moveasync,--X=100,--time=500,--base=me]Heh,\w4 yeah I know how you feel.\e"
	}
	elseif "S-Dusty-OverlapB-D01" _in_ ConvoTag
	{
		res_reference0 = "Dusty"
		
		"\0\s[110]Uff-!\w8\w8\s[106] Uh,\w4 what's with that look you're giving us,\w4 %(username)?\w8\w8\e S-Dusty-OverlapB-S01"
	}
	elseif "S-Dusty-OverlapB-D02" _in_ ConvoTag
	{
		res_reference0 = ""
		
		"\0\s[110]\n\n\![moveasync,--X=100,--time=500,--base=me]Kisses???\e"
	}
	elseif "DustyMinimizedRYS-0825 0" _in_ ConvoTag
	{
		res_reference0 = ""
		holdingObsidian = 0
		"\0\s[110]* (Obsidian disappears into your taskbar with Dusty.)\w8\w8\n\n\s[107]Aw...\e"
	}
	else //I'm sure as I update them that they wont always have the same convos set up...
	{
		res_reference0 = ""
		
		"\0\s[0]Hey,\w4 Dusty.\e [Make sure both ghosts are up to date!]"
	}
}

TalkToAzura
{
	_azuraspeech = TOLOWER(speech)
	
	if "currently playing" _in_ _azuraspeech //If she's playing music, check to see if he recognizes the song
	{
		if "friends" _in_ _azuraspeech
		{
			"\C\0\n\n\s[104]Oh neat,\w4 I like that one.\e"
			res_reference0 = ""
		}
		elseif "let down" _in_ _azuraspeech
		{
			"\C\0\n\n\s[106]Ah,\w4 that's kind of a sad one isn't it?\e"
			res_reference0 = ""
		}

		else //If he doesn't recognize the song
		{
			res_reference0 = ""
			AzuraSong = SPLIT(speech,"playing ")[1] //Removes Azura's dialogue
			//firstpart = SPLIT(speech,"\e")[0]
			//secondpart = SPLIT(speech,"\e")[1]
			
			if AzuraSong _in_ AzuraSongList //Check to see if Azura has played this song for him before
			{
				"\C\0\n\n\s[104]Oh yeah,\w4 you were playing this one before,\w4 weren't you?\e"
			}
			elseif AzuraSong _in_ AzuraSongMemories
			{
				"\C\0\n\n\s[1070]Hmm...\w8\w8 Did you play that one before..?\w8\w8 No...\e"
				AzuraSongList += "%(AzuraSong)\n-"
			}
			elseif AzuraSong _in_ SongList //Check to see if the user has played this song for him before
			{
				"\C\0\n\n\s[104]Oh yeah,\w4 I think %(username) has played this one for me before.\e"
			}
			else //Song isn't in memory
			{
				AzuraSongList += "%(AzuraSong)\n-"
				"\C\0\n\n\s[0]Oh,\w4\s[104] I haven't heard this one before.\e"
			}
		}
	}
	else
	{
		if "nothing in particular" _in_ _azuraspeech //Azura tells him that she isn't doing anything/playing music
		{
			"\C\0\n\n\s[0]Oh,\w4 \s[104]alright then.\e"
			res_reference0 = ""
		}
		else //If she's saying hello/something he doesn't recognize
		{
			res_reference0 = ""
			"Hey there,\w4 Azura.\e"
		}
	}
}

TalkToLiah
{
	if "Liah_SFirstMeet01" _in_ ConvoTag
	{
		res_reference0 = "Liah"
		"\0\s[110]Oh!\w8\s[104] Hello,\w4 I didn't see you there.\w8\w8"
		--
		if totalhours > 20
		{
			"  \s[0]I spend a lot of time here,\w4\s[106] I guess %(username) likes having me around.\w8\w8\s[0] Do you come here often too?\w8\w8\e Liah_SFirstMeet01_R_LongTime"
		}
		else
		{
			"  \s[106]I haven't been around here very long,\w4\s[104] I guess I haven't met everyone yet.\w8\w8\s[0] My name's S,\w4 by the way.\w8\w8 What's yours?\w8\w8\e Liah_SFirstMeet01_R"
		}
	}
	elseif "Liah_SFirstMeet02" _in_ ConvoTag
	{
		res_reference0 = "Liah"
		if "LongTimeBoth" _in_ ConvoTag //they're both veterans of your desktop
		{
			"\0\n\n\s[0]I'm S,\w4\s[104] it's good to meet you.\w8\w8\s[208] Maybe %(heshe) doesn't like to crowd up %(hisher) monitor..?\w8\w8"
			--
			if displaywidth >= 1366
			{
				"  \s[201]Though,\w4 it is %(displaywidth)x%(displayheight)...\w8\w8\e Liah_SFirstMeet02_R_LongTimeBoth"
			}
			else
			{
				"  \s[206]%(displaywidth)x%(displayheight) isn't a lot if you're busy...\w8\w8\e Liah_SFirstMeet02_R_LongTimeBoth"
			}
		}
		elseif "LongTimeS" _in_ ConvoTag //S has been around a while, but Liah hasn't
		{
			"\0\n\n\s[104]I'm S,\w4 it's good to meet you.\w8\w8\s[0] It's pretty chill here,\w4 %(username) is a nice person to hang out with.\w8\w8\e Liah_SFirstMeet02_R_LongTimeS"
		}
		elseif "LongTimeLiah" _in_ ConvoTag //Liah has been around a while, but S hasn't
		{
			"\0\n\n\s[104]Likewise.\w8\w8\s[110] Have you met many other people here?\w8\w8\e Liah_SFirstMeet02_R_LongTimeLiah"
		}
		else
		{
			"\0\n\n\s[104]Likewise.\w8\w8 Hopefully I'll run into you again if %(username) keeps bringing me here,\w4\s[103] it's nice to not be alone.\w8\w8\e Liah_SFirstMeet02_R"
		}
	}
	elseif "Liah_SFirstMeet03" _in_ ConvoTag
	{
		res_reference0 = ""
		if "LongTimeLiah" _in_ ConvoTag
		{
			if "MetGaster" _in_ ConvoTag
			{
				"\0\n\n\s[1100]* (He turns as pale as a skeleton can.)\w8\w8\n\n\s[204]...........\w8\w8\n\n\s[200]Ah,\w4 I don't think I've met him.\w8\w8\e"
			}
			else
			{
				if "MetTemmie" _in_ ConvoTag
				{
					//TODO: there needs to be a value for S having met Temmie! | OTL my to do list grows...
					if talkedtoTemmie == 1
					{
						"\0\n\n\s[107]Ah,\w4 that's just how Temmie is.\w8\w8\s[208] Sometimes I wonder if she sees something we don't...\w8\w8"
					}
					else
					{
						"\0\n\n\s[107]Ah,\w4 I should've expected Temmie would show up in a place like this...\w8\w8"
					}
					--
					"\n\n\s[0]Anyways,\w4 it's cool to meet other people here,\w4\s[104] I hope I'll see you around again.\e"
				}
				else
				{
					if "MetUnknownGhosts" _in_ ConvoTag
					{
						"\0\n\n\s[106]Ah,\w4 thats fair.\w8\w8\s[104] Well,\w4 they can't be all bad if %(username) has them around,\w4 right?\e"
					}
					elseif ARRAYSIZE(installedghostlist) > 3
					{
						"\0\n\n\s[106]Ah,\w4 %(heshe) must not usually bring more than one of us here at a time,\w4 then.\w8\w8\s[104] Well,\w4 maybe this'll start a trend.\e"
					}
					else
					{
						"\0\n\n\s[208]I wonder if %(heshe)'ll ever bring others here besides us.\w8\w8\s[104] It's nice not to be alone.\e"
					}
				}
			}
		}
		else
		{
			"\0\s[102]* He nods.\e"
		}
	}
	else
	{
		res_reference0 = ""
		"\0\s[103]* He waves back.\e"
	}
}

TalkToMiniDev
{
	if "GetMiniDevStats02" _in_ ConvoTag
	{
		_outfit = ConvoTag[1]
		
		if _outfit == " 1"
		{
			//res_reference0 = "MiniDev"
			MiniDevSOutf = 1
			
			"\0\s[208]Is he copying me..?\e GetMiniDevStats03 MDOutfitUnlock"
		}
		else
		{
			res_reference0 = ""
			"\0\s[104]Hello MiniDev.\w8\w8\e"
		}
	}
}

LuloConversationPool //Conversation starters with Lulo
{
	if ConvoTag[1] == "Awake"
	{
		"\0\S[104]You seem cheerful today,\w4 feeling good?\w8\w8\e,00,S-Lulo_AwakeGeneral-00"
	}
	elseif ConvoTag[1] == "Asleep"
	{
		//"Lulo is asleep.\e"
	}
	else //Sleepy
	{
		"\0\s[109]* (He sighs quietly.)\w8\w8\e 00_S-Lulo_SleepyGeneral-00"
	}
	
	
}

TalkToLulo
{
	//---Awake---
	// if "S-Lulo_AwakeGeneral-00" _in_ ConvoTag
	// {
		// if "01_" _in_ ConvoTag
		// {
			// "\0\n\n\s[107]No thanks,\w4 sweetheart.\w8\w8 I don't think my leg would hold up that far.\w8\w8\S[0] If you want to run,\w4 I'll time you.\w8\w8\e 02"
		// }
		// elseif "03_" _in_ ConvoTag
		// {
			// "\0\n\n\S[111]%(ConvoTag[1]) seconds.\w8\w8\S[104] That's really good,\w4 you've got my high score beat for sure.\w8\w8\e 04"
		// }
		// elseif "05_" _in_ ConvoTag
		// {
			// "\0\n\n\s[102]Exactly.\w8\w8\e 06"
		// }
		// --
		// "_S-Lulo_AwakeGeneral-00"
	// }
	
	if "S-Lulo_AwakeGeneral-00" _in_ ConvoTag
	{
		_pos = ConvoTag[1]
		switch _pos
		{
			"" //Yeah, lots of energy. Wanna race me to %(username)'s %(usersfolder)?
			"\0\n\n\s[107]No thanks,\w4 sweetheart.\w8\w8 I don't think my leg would hold up that far.\w8\w8\S[0] If you want to run,\w4 I'll time you.\w8\w8\e,02"
			"" //Ok! * (She darts off in an instant...) Back!
			"\0\n\n\S[111]%(ConvoTag[3]) seconds.\w8\w8\S[104] That's really good,\w4 you've got my high score beat for sure.\w8\w8\e,04"
			"" //C'mon dad, you said yourself you can't run that far.
			"\0\n\n\s[102]Exactly.\w8\w8\e,06"
			//Dad!!
		}
		--
		",S-Lulo_AwakeGeneral-00"
	}
	
	
	//---Sleepy---
	elseif "S-Lulo_SleepyGeneral-00" _in_ ConvoTag
	{
		if "01_" _in_ ConvoTag
		{
			"\0\n\n\s[104]Yes,\w4 sweetheart?\w8\w8\e 02"
		}
		elseif "03_" _in_ ConvoTag
		{
			"\0\n\n\s[102]Yes,\w4 I'm fine,\w4 Lulo.\w8\w8\e 04"
		}
		elseif "05_" _in_ ConvoTag
		{
			"\0\n\n\s[106]I mean it,\w4 kiddo;\w8 I'm alright,\w4 you don't need to worry about me.\w8\w8\e 06"
		}
		elseif "07_" _in_ ConvoTag
		{
			"\0\n\n\s[206]Well,\w4 I am tired,\w4\s[104] but I can get by.\w8\w8\e 08"
		}
		--
		"_S-Lulo_SleepyGeneral-00"
	}
	
	elseif "Lulo-S_SleepyGeneral-01" _in_ ConvoTag
	{
		res_reference0 = ""
		"\s[110]Oh,\w4 so I did.\w8\w8\s[104] Thanks,\w4 Lulo.\e"
	}
	
	
	else //If their ConvoTags don't match
	{
		res_reference0 = ""
		
		"\s[104]Hello,\w4 Lulo.\e"
	}
}

TalkToLuloSleepy
{
	/*if "commuchain1" _in_ ConvoTag
	{
		res_reference0 = "Lulo"
		
		"Response to chain 1\e commuchain1b"
	}
	elseif "commuchain2" _in_ ConvoTag
	{
		res_reference0 = "Lulo"
		
		"Response to chain 2\e commuchain2b"
	}
	elseif "commuchain3" _in_ ConvoTag
	{
		res_reference0 = "Lulo"
		
		"Response to chain 3\e commuchain3b"
	}
	elseif "commuchain4" _in_ ConvoTag
	{
		res_reference0 = "Lulo"
		
		"Response to chain 4\e commuchain4b"
	}
	elseif "Dark Purple Hoodie" _in_ ConvoTag
	{
		"You're wearing a dark purple hoodie"
	}*/
}

TalkToHydrate
{
	res_reference0 = "Hydrate"
	/*
	0 is just the \e, ignore it
	1 is the number of drinks the user has taken this session
	2 is the number of drinks they've taken in a row without missing one or dismissing the box
	3 is the total number of drinks they've taken since the ghost was installed
	4 is the current shell
	5 is a list of all dressups being used. I've included 'Dressups:' in front, you can use SPLIT to split off the list, in case multiple are being used at once, and read that as a simple array
	*/
	_HYsession = TOINT(ConvoTag[1])
	_HYstreak = TOINT(ConvoTag[2])
	_HYtotal = TOINT(ConvoTag[3])
	_HYextratoday = TOINT(ConvoTag[4])
	_HYextratotal = TOINT(ConvoTag[5])
	_HYshell = ConvoTag[6]
	_HYdressups = SPLIT(ConvoTag[7],"|-|")
	
	HydrateStats = (_HYsession,_HYstreak,_HYtotal,_HYextratoday,_HYextratotal,_HYshell,_HYdressups)
	
	lastTalk = HydrateComments(HydrateStats)
	lastTalk
	
	--
	"\0\s[0]You've taken %(_HYsession) drinks this session,\w4 %(_HYstreak) drinks in a row,\w4 and %(_HYtotal) drinks total.\n\nYou've taken %(_HYextratoday) extra sips of water today,\w4 and %(_HYextratotal) extra sips in total.\n\nHydrate is in the %(_HYshell) shell,\w4 using these dressups:\n\n%(_HYdressups)\e"
}

HydrateComments
{
	_HYshell = _argv[5]
	_HYdressups = _argv[6]
	
	if _HYshell == "Poison"
	{
		if ASEARCH("picture|Skull",_HYdressups) != -1; "\0\s[0]...\s[104]Heh,\w4 it's got a skull on it.\e"
		else; "\0\s[101]Dare I ask why you have a giant bottle of poison here..?\e"
	}
	elseif _HYshell == "Potion"
	{
		if ASEARCH("picture|Health",_HYdressups) != -1; "\0\s[110]I wonder what kind of healing you could do with that much health potion...\e"
		else; "\0\s[106]That's a pretty big potion,\w4 are you planning to drink all that..?\e"
		
	}
	elseif _HYshell == "Metal Bottle"
	{
		"\0\s[104]That's a pretty neat water bottle,\w4 %(username).\w8\w8\s[0] You like your water cold,\w4 then?\w8\w8 \s[104] Me too.\e"
	}
	elseif _HYshell == "Teacup"
	{
		"\0\s[110]...That's a lot of tea...\w8\w8\s[106] Are you a big tea drinker,\w4 %(username)?\e"
		if thesplit == 1; "\0\s[206]...%(teal('He')) used to drink a lot of tea...\e"
	}
	elseif _HYshell == "Alkohol"
	{
		"\0\s[107]That's a lot of alcohol...\w8\w8\s[202] None for me,\w4 thanks,\w4 my body is completely intolerant of the stuff.\e"
	}
	elseif _HYshell == "Bleach"
	{
		"\0\s[106]%(username),\w4 please don't drink bleach.\e"
		"\0\s[107]I can smell that bleach through the bottle...\e"
		"\0\s[110]Hey,\w4 %(username),\w4 would you mind if I used some of that bleach?\w8\w8\s[101] Some of your older files are kinda grimy.\e"
	}
	elseif _HYshell == "Clear"
	{
		"\0\s[110]Is...\w8\w8 is that a giant water bottle?\e"
	}
	elseif _HYshell == "Fishbowl"
	{
		if "straw" _in_ _HYdressups; "\0\s[106]Uh,\w4 so,\w4 why do you have a straw in a fishbowl..?\w8\w8\s[107] Kind of a weird way to get your hydration,\w4 isn't it..?\e"
		"\0\s[101]...Is that a fish in your water?\w8\w8 That seems...\w8\w8\s[202] not healthy,\w4 for either party.\e"
	}
	elseif _HYshell == "Martini Gore"
	{
		if "Eyeball" _in_ _HYdressups; "\0\s[202]...Why is there an %(italic('eye'))\w2 in your...\w8\w8\w8\s[107] You know what,\w4 I changed my mind,\w4 I don't want to know.\e"
		else; "\0\s[202]That is...\w8\w8 definitely not water that you've got there.\w8\w8\s[107] Is there a reason for this??\w8\w8\s[101] You a vampire,\w4 or something?\e"
	}
	elseif _HYshell == "Lava in a Cup"
	{
		"\0\s[110]Uh,\w4 that seems like a dangerous drink,\w4 doesn't it?\w8\w8\s[107] Don't burn yourself,\w4 %(username).\e"
		"\0\s[106]...You're not %(italic('drinking')) that lava,\w4 are you..?\e"
	}
	elseif _HYshell == "Rilakkuma"
	{
		"\0\s[111]Aw,\w4 that's a cute glass.\w8\w8\s[104] Having coffee today?\w8\w8\s[102] Just make sure you have some water too.\e"
	}
	elseif _HYshell == "LOL Mug"
	{
		"\0\s[101]LOL?\w8\w8 Isn't that one of those computer things?\e"
	}
	elseif _HYshell == "Ink"
	{
		"\0\s[106]...Don't drink ink, kiddo.\e"
		"\0\s[106]I uh...\w8\w8 Really hope that ink is just there for decoration,\w4 and you're not drinking it.\e"
	}
	else
	{
		"\0\s[104]Good job staying hydrated,\w4 %(username).\e"
	}
}

OnHyPingPause
{
	"\_w[1500]\![raise,OnAiTalk]"
}

OnSilentPingHydrate
{
	res_reference0 = "Hydrate"
	"\e HydrateStatsSilent"
}

OnHydrateGhostStats
{
	_HYsession = TOINT(reference1)
	_HYstreak = TOINT(reference2)
	_HYtotal = TOINT(reference3)
	_HYextratoday = TOINT(reference4)
	_HYextratotal = TOINT(reference5)
	_HYshell = reference6
	_HYdressups = REPLACE(reference7,"|-|",",")
	
	HydrateStats = (_HYsession,_HYstreak,_HYtotal,_HYextratoday,_HYextratotal,_HYshell,_HYdressups)
	
	//"\0\s[0]You've taken %(_HYsession) drinks this session,\w4 %(_HYstreak) drinks in a row,\w4 and %(_HYtotal) drinks total.\n\nYou've taken %(_HYextratoday) extra sips of water today,\w4 and %(_HYextratotal) extra sips in total.\n\nHydrate is in the %(_HYshell) shell,\w4 using these dressups:\n\n%(_HYdressups)\e"
}

DustySLulo //3 way conversations between Dusty, S, and Lulo
{
	if "ExampleA" _in_ ConvoTag
	{
		_reply1 = "\s[102]This is my first response to Lulo.\w8\w8 I'm going to drag Dusty into this conversation.\w8\w8\s[205] Hello Dusty.\w8\w8"
		_reply2 = "\n\n\s[0]Hi to you too,\w4 Obsidian.\w8\w8"
		_reply3 = "\n\n\s[104]This is the end of the dialogue.\w8\w8 Good talking with you guys."
		
		if "_S1" _in_ ConvoTag //This probably wont be used, but I still need the reply1 stuff in here
		{
			res_reference0 = "Dusty"
			"%(_reply1)\e Dusty-S-Lulo_ExampleA_D1"
		}
		elseif "_S2" _in_ ConvoTag
		{
			res_reference0 = "Lulo"
			"\_q%(RemovePauses(_reply1))\_q"
			--
			"%(_reply2)\e Dusty-S-Lulo_ExampleA_L3"
		}
		elseif "_S3" _in_ ConvoTag
		{
			res_reference0 = ""
			"\_q%(RemovePauses(_reply1))%(RemovePauses(_reply2))\_q"
			--
			"%(_reply3)\e"
		}
		else
		{
			res_reference0 = ""
			"Something went wrong,\w4 you've hit an else."
		}
	}
}

RemovePauses //Removes \w tags, \_w tags, and quicksection tags
{
	_argv[0] = REPLACE(_argv[0],"\![quicksection,true]","")
	_argv[0] = REPLACE(_argv[0],"\![quicksection,false]","")
	_argv[0] = REPLACE(_argv[0],"\w9","")
	_argv[0] = REPLACE(_argv[0],"\w8","")
	_argv[0] = REPLACE(_argv[0],"\w7","")
	_argv[0] = REPLACE(_argv[0],"\w6","")
	_argv[0] = REPLACE(_argv[0],"\w5","")
	_argv[0] = REPLACE(_argv[0],"\w4","")
	_argv[0] = REPLACE(_argv[0],"\w3","")
	_argv[0] = REPLACE(_argv[0],"\w2","")
	_argv[0] = REPLACE(_argv[0],"\w1","")
	_argv[0] = RE_REPLACE(_argv[0],"\\_w\[\d*]","") //removes any \_w[] tags
	_argv[0]
}

OnFacingCoords
{
	res_reference0 = "Dusty"
	SsXCoord = reference0[0]
	SsXCoord = TOINT(SsXCoord)

	DsXCoord = ConvoTag[1]
	DsXCoord = TOINT(DsXCoord)
	if DsXCoord > SsXCoord
	{
		"\0\s[300]You're to my left."
	}
	elseif DsXCoord < SsXCoord
	{
		"\0\s[205]You're to my right."
	}
	else
	{
		"\0\s[106]We're overlapping."
	}
	--
	"\e GiveCoords02,%(reference0)"
}

OnDustyDragCoords
{
	res_reference0 = "Dusty"
	_SsXCoord = reference0[0]
	_SsXCoord = TOINT(_SsXCoord)
	"\e DustyDragCoords02,%(_SsXCoord)"
}

OnObsidianJumpDown
{
	res_reference0 = "Dusty"
	_SsXCoord = reference0[0]
	_SsYCoord = reference0[3]
	_SsXCoord = TOINT(_SsXCoord)
	"\0\s[1298]\e SObsiJumpDown02,%(_SsXCoord),%(_SsYCoord)\e SObsiJumpDown02" //replaceframe Obsi jump down
}

OnSendStats
{
	CurrentPos[0] = reference0 //Dusty's X
	CurrentPos[1] = reference1 //Dusty's Y
	CurrentPos[2] = reference2 //Obsi's X
	CurrentPos[3] = reference3 //Obsi's Y
	res_reference0 = CurrentPos[4]
	
	_SeenLV = RAND(10); if SeenLV == 0; _SeenLV = -1 //These are temporary, I will make him a misc flags array at some point
	_LVCheck = RAND(10); if LVCheck == 0; _LVCheck = -1
	_broken = RAND(10); if broken == 0; _broken = -1
	_knowaboutfamily = RAND(10); if knowaboutfamily == 0; _knowaboutfamily = -1
	_thesplit = RAND(10); if thesplit == 0; _thesplit = -1
	_askedabouttimelines = RAND(10); if askedabouttimelines == 0; _askedabouttimelines = -1
	_knowmorethanyoushould = RAND(10); if knowmorethanyoushould == 0; _knowmorethanyoushould = -1
	_thatsanoddnumber = RAND(10); if thatsanoddnumber == 0; _thatsanoddnumber = -1
	_abbiblind = RAND(10); if abbiblind == 0; _abbiblind = -1
	
	_dressupsnocomma = REPLACE(dressups,",","-")
	_ingredientsnocomma = REPLACE("%(todaysingredients)",",","-")
	
	"\e SentSStats %(ConvoTag),%(nowmode),%(love),%(LV),%(_LVCheck),%(_broken),%(mikireflag),%(nowshell),%(_dressupsnocomma),%(staysafe),%(_thesplit),%(dreams),%(holdingObsidian),%(lastinteracted),%(lookingatphone),%(currentlydrinking),%(nowscale),%(mikireflag),%(reset),%(CurrentPos[0]),%(CurrentPos[1]),%(CurrentPos[2]),%(CurrentPos[3])," //Stuff to do with his current mode
	--
	"%(passhour),%(passmin),%(passsec),%(aitalkinterval),%(pethighscore),%(toppetstreak),%(CameBack),%(updateavailable),%(sleephour),%(sleepmin),%(sleepsec)," //Really important ones
	--
	"%(installdate[0]),%(installdate[1]),%(installdate[2]),%(installdate[3]),%(installdate[4]),%(installdate[5])," //Install date
	--
	"%(RYS),%(RYSprogress),%(RYStrust),%(RYSlearn[0]),%(RYSlearn[1]),%(RYSlearn[2]),%(RYSlearn[3]),%(askedWhoRYS),%(knowaboutABI),%(ASEARCH(reference0,RYSMetGhosts)),%(ARRAYSIZE(RYSMetGhosts))," //RYS important stats
	--
	"%(RYSunlockDate[0]),%(RYSunlockDate[1]),%(RYSunlockDate[2]),%(RYSunlockDate[3]),%(RYSunlockDate[4]),%(RYSunlockDate[5]),"
	--
	"%(askedaboutwd),%(askedaboutdings),%(askedaboutwings),%(askedaboutbarcode),,%(askedaboutbluejeans),%(askedaboutabbi),%(askedaboutrosie),%(askedaboutroman),%(askedaboutcambria),%(askedabouttriton),%(askedaboutlulo),%(askedaboutazo),%(askedaboutsigil),%(askedaboutelko)," //Family members unlocked, note that there's an extra space where S would go
	--
	"%(knowaboutkit),%(knowaboutsmol),%(knowaboutbirdy),%(knowaboutsorrel),%(knowaboutpmd),%(knowaboutbender),%(knowaboutnine),%(knowaboutserif),%(knowaboutecho),%(knowaboutice),%(knowaboutomega)," //Unlocked timelines
	--
	"%(talkedtoDusty),%(talkedtoLulo),%(talkedtoCambria),%(talkedtoTemmie),%(talkedtoAzura),%(ASEARCH(reference0,MetGhosts)),%(ARRAYSIZE(MetGhosts)),"
	--
	"%(totalpets),%(totalhours),%(totalsnags),%(totalpunches),%(totalhugs),%(totalboops),%(totalwaters),%(beenoffscreen),%(minimized),%(beenbackwards),%(givensocks),%(givenblankets),%(givenmittens),%(scaled),%(dragdizzy),%(scaledizzy),%(slept),%(totalsleep),%(balloonspopped),%(heldObsidian),%(Sboots),"
	--
	"%(RYSboots),%(RYSwater),%(RYSsnacks),%(RYSblankets),%(RYSbooks),%(RYShugs),%(RYScomforted),%(RYShours),%(RYSpets)," //RYS counters
	--
	"%(complimented),%(comforted),%(snagged),%(flattered),%(talkedaboutpast),%(hugged),%(givenfood),%(giveningredients),%(ARRAYSIZE(todaysingredients)),%(_ingredientsnocomma),%(givenwater),%(givenbooks),%(givenwarmthings),%(givencutethings),%(recentpets),%(changedscaling),%(Dragged),%(recentnightmare),"
	--
	"%(RYSrecentBlankets),%(RYSrecentBooks),"
	--
	"%(Degrees[0]),%(tempurature[0]),%(feelslike[0]),%(humidity),%(wind[0]),,%(weather),%(pollen),%(sunrise),%(sunset),%(phase)," //Weather
	--
	"%(_SeenLV),%(_knowaboutfamily),%(_askedabouttimelines),%(_knowmorethanyoushould),%(_thatsanoddnumber),%(_abbiblind),%(ASEARCH('Seen Gaster with googly eyes',MiscFlags))," //Misc flags - I'm gonna make these all an array eventually, so atm they're using local variables
	
	
	//{Guide to all these variables because dear god
	
	//0 - \e SentSStats + ConvoTag (Use an _in_ check if you want to see what the convo tag was)
	//1 - S's current mode. Can be Default, Asleep, or RYS
	//2 - S's current friendship with the user, 150 is very high
	//3 - LV stat is if the user has been cruel to S. This will only be above 0 if the user has punched him! After the user has punched him at least once, it can be raised by other negative actions like being rough with his skull or negative acts in the menu
	//4 - This will be -1 if the user has not discovered his LV, and some other number if they have
	//5 - This will be -1 if the user has not broken him, and some other number if they have
	//6 - 1 if he's off the screen, 0 if he is not
	//7 - his current shell
	//8 - Current dressups, any commas are replaced with dashes
	//9 - If the number is 1, the user has set S to refer to Blue Jeans as female, for safety reasons
	//10 - If the user has unlocked the final info about S's family
	//11 - S's current dreams, 0 is the worst dreams, 4 is the best dreams. This number changes randomly every hour, or the user can affect it via petting
	//12 - 1 if he's currently holding Dusty's cat Obsidian, 0 if he is not
	//13 - The number of hours since the user last interacted with him. If 6 or higher, he'll be anxious and commenting about hoping they come back soon
	//14 - 1 if he's looking at his phone, 0 if he's not
	//15 - 0 if he's not drinking anything, 1 if he's drinking water, 2 if he's drinking juice, 3 if he's drinking milk. More possible in the future, be careful
	//16 - His current scale, as a percentage
	//17 - 1 if S is off the screen, 0 if not
	//18 - How many times the user has reset him
	//19 - S's X coordinate
	//20 - S's Y coordinate
	//21 - The kero character's X coordinate (currently unused)
	//22 - The kero character's Y coordinate (currently unused)
	
	//23 - passhour, How many hours have passed since he was opened
	//24 - passmin, How many minutes have passed in the current passhour
	//25 - passsec, How many seconds have passed in the current passmin
	//26 - How often he should say a randomtalk, in seconds
	//27 - The user's petting high score, as he lists it in his balloon (stroke count)
	//28 - The user's petting high score, as the number of complete pets
	//29 - 1 if the user left him alone for 6 hours or more and then came back this session, 0 otherwise
	//30 - 1 if an update is available, 0 otherwise
	//31 - sleephour, How many hours have passed since he fell asleep
	//32 - sleepmin, How many minutes have passed in the current sleephour
	//33 - sleepsec, How many seconds have passed in the current sleepmin
	
	//These ones are the date he was first installed. Please note that for many people this might be blank, since his first versions didn't set this date!
	//34 - Year
	//35 - Month
	//36 - Day
	//37 - Hour
	//38 - Minute
	//39 - Second
	
	//RYS related important variables
	//40 - RYS's nickname that the player has set. Will be RYS-0825 if they have not touched it.
	//41 - The user's current progress with RYS. 7 once they've fully unlocked him and can switch back and forth between modes at will
	//42 - RYS's friendship with the user
	//43 - 1 if the user told him there's no reason that they pet him, 2 if they say they did it to see how he reacts, 3 if they say they did it because they care, 0 if he hasn't asked or they didn't give an answer
	//44 - 1 if the user told him there's no reason that they bring him on their computer, 2 if they say they did it because they're curious, 3 if they say they did it because they like him, 4 if they say they did it so he'll be safe, 0 if he hasn't asked or they didn't give an answer
	//45 - 1 if the user told him there's no reason that they nicknamed him, 2 if they say they did it because they think it's funny, 3 if they say they did it because he needs a good name to make him feel like a person, 0 if he hasn't asked or they didn't give an answer
	//46 - 1 if the user told him there's no reason that they hug him, 2 if they say they did it to see how he reacts, 3 if they say they did it to try and make him feel safe, 0 if he hasn't asked or they didn't give an answer
	//47 - 1 if they got RYS to tell them who he really is in the first startup sequence, 0 if they haven't yet (this is required to progress)
	//48 - If the user has learned about ABI by asking RYS questions yet
	//49 - If the ghost that is pinging RYS is one that has tried talking to him before
	//50 - How many ghosts have tried talking to RYS
	
	//The date the user unlocked RYS
	//51 - Year
	//52 - Month
	//53 - Day
	//54 - Hour
	//55 - Minute
	//56 - Second
	
	//Family members the user has unlocked, 0 if locked, 1 if unlocked
	//57 - WD
	//58 - Dings
	//59 - Wings
	//60 - Barcode
	//61 - S //Just here for consistency, will always be blank
	//62 - Blue Jeans
	//63 - Abbi
	//64 - Rosie
	//65 - Roman
	//66 - Cambria
	//67 - Triton
	//68 - Lulo
	//69 - Azo
	//70 - Sigil
	//71 - Elko
	
	//Timelines the user has unlocked, 0 if locked, 1 if it's in the menu but they haven't clicked, 2 if they've clicked
	//72 - Kit
	//73 - Smol
	//74 - Birdy
	//75 - Sorrel
	//76 - PMD
	//77 - Bender
	//78 - Nine
	//79 - Serif
	//80 - Echo
	//81 - Ice
	//82 - Omega
	
	//83 - 1 if he's ever had commu dialogue with Dusty, 0 if no
	//84 - 1 if he's ever had commu dialogue with Lulo, 0 if no
	//85 - 1 if he's ever had commu dialogue with Cambria, 0 if no
	//86 - 1 if he's ever had commu dialogue with Temmie, 0 if no
	//87 - 1 if he's ever had commu dialogue with Azura, 0 if no
	//88 - If the ghost that is pinging S is one he's met before
	//89 - How many ghosts S has talked to
	
	//90 - Total number of times the user has pet S
	//91 - Total number of hours the user has run S
	//92 - Total number of times the user has snagged S's head
	//93 - Total number of times the user has punched S
	//94 - Total number of times the user has hugged S
	//95 - Total number of times the user has booped S
	//96 - Total number of times the user has given S water
	//97 - Total number of times the user has put S off the screen
	//98 - Total number of times the user has minimized S
	//99 - Total number of times the user has flipped S backwards
	//100 - Total number of times the user has given S socks
	//101 - Total number of times the user has given S blankets
	//102 - Total number of times the user has given S mittens
	//103 - Total number of times the user has scaled S up or down
	//104 - Total number of times the user has made S dizzy by dragging him
	//105 - Total number of times the user has made S dizzy by scaling him up and down
	//106 - Total number of times the user has seen S fall asleep
	//107 - Total number of hours S has slept on the user's computer
	//108 - Total number of times the user has popped S's dialogue balloon with the pop noise on
	//109 - Total number of times the user has given S Obsidian to hold
	//110 - Total number of times the user has booted S
	
	//111 - Total number of times the user has booted RYS
	//112 - Total number of times the user has given RYS water
	//113 - Total number of times the user has given RYS snacks
	//114 - Total number of times the user has given RYS blankets
	//115 - Total number of times the user has given RYS books
	//116 - Total number of times the user has given RYS hugs
	//117 - Total number of times the user has comforted RYS
	//118 - Total number of hours the user has run RYS
	//119 - Total number of times the user has pet RYS
	
	//120 - The number of times the user has complimented S recently, goes down every hour
	//121 - The number of times the user has comforted S recently, goes down every hour
	//122 - The number of times the user has snagged S's head recently, goes down every hour
	//123 - The number of times the user has flattered S recently, goes down every hour
	//124 - The number of times the user has asked S about his past recently, goes down every hour
	//125 - The number of times the user has hugged S recently, goes down every hour
	//126 - The number of times the user has given S food recently, goes down every hour
	//127 - The number of times the user has given S ingredients recently, goes down every hour
	//128 - The number of ingredients the user has given S this session, resets when he boots
	//129 - A list of the ingredients the user has given S this session, separated by -
	//130 - The number of times the user has given S water recently, goes down every hour
	//131 - The number of times the user has given S books recently, goes down every hour
	//132 - The number of times the user has given S warm things (blankets,  mittens, etc) recently, resets on boot
	//133 - The number of times the user has given S cute things (plushes mostly) recently, resets on boot
	//134 - The number of times the user has pet S recently, goes down every hour
	//135 - The number of times the user has changed S's scaling recently, goes down every hour. If it's 0, the user has never changed his scaling, it never goes below 1 after that
	//136 - The number of times the user has dragged S around recently, goes down every hour. If it's 0, the user has never changed his scaling, it never goes below 1 after that
	//137 - 1 if the user woke S up in the middle of a nightmare. Resets to 0 every hour
	
	//138 - The number of blankets the user has given RYS recently, goes down every hour
	//139 - The number of books the user has given RYS recently, goes down every hour
	
	//Current weather
	//140 - 'Fahrenheit' if the user is using fahrenheit, 'Celsius' if the user is using celsius
	//141 - Current temperature
	//142 - Current feels like temperature
	//143 - Current humidity as a percentage
	//144 - Current wind speed
	//145 - Blank for now, but I'll add in kph or mph later probably
	//146 - Weather type (Cloudy, sunny, etc. See the weather dialogues in aitalk for a possibly incomplete list of types)
	//147 - If there is a pollen alert. It will be blank if there is no pollen alert.
	//148 - Time of today's sunrise, including if it's am or pm
	//149 - Time of today's sunset, including if it's am or pm
	//150 - Current moon phase
	
	//Misc flags. One day I'm going to make these into an array! I've set it up so that if the flag returns -1, it is not set, and if it returns any other number, it is set.
	//151 - If the user has seen S's LV, though they may or may not have confronted him about it yet
	//152 - If the user knows he has a family
	//153 - If the user has asked about other timelines and has access to that question
	//154 - If the user put RYS or 0825 as their name before unlocking RYS mode - Currently not in use anywhere, but the flag will set
	//155 - If S has mentioned that he has 8 kids
	//156 - If S has mentioned that Abbi is blind
	//157 - If S has seen Gaster with googly eyes on

	//}
}


OnFLUXSongInfo
{
	_display = ""
	"\b2\_q"
	--
	for _i = 0; _i < ARRAYSIZE(reference); _i++
	{
		_display += "r%(_i): \_?%(reference[_i])\_?\n"
	}
	"%(_display)"
	--
	"\x"
}

OnApplicationExist
{
	"Application:\n%(reference0)\n\n%(reference1)"
}

OnNeedlePoke
{
	lastinteracted = 0
	//TODO fill out modes here
	if reference0 == 0 //Sakura being poked
	{
		if nowmode == "RYS" //RYS
		{
			
		}
		elseif holdingObsidian == 1 //Obsidian
		{
			
		}
		elseif nowmode == "Asleep" //Asleep
		{
			
		}
		else
		{
			if LV == 0 //Normal - friendship stages?
			{
				"\0\s[1550]"
				"\0\s[301]"
				--
				"Ow-!"
				"Ouch-!"
				"Eep-!"
				"Ah-!"
				--
				"\w8\w8\w8\n\n"
				--
				"\s[200]"
				"\s[201]"
				"\s[206]"
				"\s[303]"
				--
				"Ouch??"
				"What was that for?"
				"Um,\w4 no thanks on the giant needle,\w4 %(username)."
				"Uh,\w4 I would prefer not to be poked by giant needles,\w4 thanks."
				"Careful where you're swinging that thing!"
				"Careful with that!"
				"Geez,\w4 good thing I'm not terribly fragile,\w4 %(username)."
				"Geez kiddo,\w4 be careful or someone could get really hurt."
			}
			elseif LVCheck == 1 //Sad
			{
				
			}
			else //Mad
			{
				
			}
		}
	}
}