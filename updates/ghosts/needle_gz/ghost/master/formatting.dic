nickname
{
	if !NicknameSet {truename; return}
	
	_tempnames = (nicknames,username,truename)
	_names = IARRAY
	foreach _tempnames; _name
	{
		if _name != ""; _names ,= _name
	}
	
	ANY(_names)
}

bold
{
	"\f[bold,1]"
}

boldoff
{
	"\f[bold,default]"
}

italics
{
	"\f[italic,1]"
}

italicsoff
{
	"\f[italic,default]"
}

strike
{
	"\f[strike,1]"
}

strikeoff
{
	"\f[strike,default]"
}

gray
{
	"\f[color,disable]"
}

grayoff
{
	"\f[color,default]"
}

fast
{
	"\![set,balloonwait,0.5]"
}

slow
{
	"\![set,balloonwait,2]"
}

faster
{
	"\![set,balloonwait,0.2]"
}

slower
{
	"\![set,balloonwait,4]"
}

regspeed
{
	"\![set,balloonwait,1]"
}

big
{
	"\f[height,+2]"
}

small
{
	"\f[height,-2]"
}

regsize
{
	"\f[height,default]"
}

NicknameSet
{
	username != ""
}

Capital
{
	_firstletter = TOUPPER(SUBSTR(_argv[0],0,1))
	_rest_of_word = ERASE(_argv[0],0,1)
	_firstletter + _rest_of_word
}

randomcase_all
{
	if RAND(2); TOUPPER(_argv[0])
	else; TOLOWER(_argv[0])
}

two
{
	"\_s"
}

twooff
{
	"\_s"
}

three
{
	"\_s[0,1,2]"
}

threeoff
{
	"\_s"
}

emdash
{
	"\f[name,calibri]â€”\f[name,default]"
}

marquee
{
	_str = _argv[0]
	_len = STRLEN(_str)
	
	_display = "\f[align,right]%(_str)"
	--
	for _i = 0; _i < _len; _i++
	{
		_display += "\c[char,1,0]\w1"
	}
	
	_display
}

Capitalize
{
	_first = SUBSTR(_argv[0],0,1)
	_rest = ERASE(_argv[0],0,1) //Erase the first character and store everything else in _rest
	TOUPPER(_first) + _rest
}

CapitalizeAll
{
	_input = _argv[0]
	_input = SPLIT(_input," ")
	_output = ""
	foreach _input; _in
	{
		if _output != ""; _output += " "
		_output += Capitalize(_in)
	}
	_output
}

nowmin
{
	_minute = TOSTR(minute)
	if STRLEN(_minute) == 1; _minute = "0" + _minute
	_minute
}

ap
{
	('AM','PM')[ampm]
}

//Sets the appropriate suffix for whatever number you pass in
NumSuffix : all
{
	_str = TOSTR(_argv[0])
	_last = SUBSTR(_str,STRLEN(_str) - 1,1)
	_last2 = SUBSTR(_str,STRLEN(_str) - 2,2)
	CVINT(_last2)
	
	_str //Add the number, suffixes added below
	
	//Handle teen numbers
	if _last2 >= 11 && _last2 <= 13
	{
		"th"
		return
	}
	
	//Everything else
	case TOINT(_last)
	{
		when 1; "st"
		when 2; "nd"
		when 3; "rd"
		others; "th"
	}
}