//---------------------------Miscellaneous Functions--------------------------


OnFileDrop2
{
	if holdingObsidian == 1
	{
		"\1\s[-1]\0\s[606]%(wdc)Sorry %(username),\w4 my hands are a little full.\w8\w8\s[600] Show me again in a few minutes.\1%(holdnoise)\e"
	}
	else
	{
		_filepath = SPLITPATH(reference0)
		_filename = _filepath[2]
		_fileext = TOLOWER(_filepath[3])
		case _fileext
		{
			when ".jpg", ".jpeg", ".bmp", ".png" //These are the formats your ghost will recognize as image files to set as the background. I tested this with .png files and it does not work, so don't bother adding that as an option. [Zi] Seems to be working fine for me... I'm worried it's gonna break later or something lol
			{
				Wallpaperfile = reference0
				
				"\0\s[0]%(wdc)%(t)Would you like me to set %(_filename)%(_fileext) as your wallpaper?]\n\n"
				--
				"\![*]\q[Centered,SetWallpaper_0]\n/
				\![*]\q[Tiled,SetWallpaper_1]\n/
				\![*]\q[Stretched,SetWallpaper_2]\n"
				--
				_osver = TOINT(os_version) //Checks to see if the user is using windows 10, and if so offers the span option since it's compatible
				if "Windows" _in_ os_name && _osver >= 10
				{
					"\![*]\q[Span,WallpaperSpan]\n\n"
				}
				--
				"\n\![*]\q[No thanks,SetWallpaper_Cancel]\e"
			}
			when ".mid", ".wav", ".mp3", ".wma", ".au" //music
			{
				"%(wdc)\0\s[106]%(t)Sorry##\w4 %(username)##\w4 I can't play music.\w8\w8\s[0\] Maybe someone else could play it for you?]\e"
			}
			others //Any other file format.
			{
				if _filename == ""
				{
					"%(wdc)\0\s[0]%(t)This is \_?%(reference0)\_?.\w8\w8\s[106\] I can't do anything with it##\w4 sorry.]\w8\w8\1%(sCatNoise)\e"
				}
				else
				{
					"%(wdc)\0\s[0]%(t)This is %(_filename)%(_fileext).\w8\w8\s[106\] I can't do anything with it##\w4 sorry.]\w8\w8\1%(sCatNoise)\e"
				}
			}
		}
	}
}

Select.SetWallpaper_0
{
	"%(wdc)\![set,wallpaper,%(Wallpaperfile),center]\0\s[114]%(t)Ok##\w4 I've centered it for you.\w8\w8 Does it look ok?]\e"
}
Select.SetWallpaper_1
{
	"%(wdc)\![set,wallpaper,%(Wallpaperfile),tile]\0\s[114]%(t)Ok##\w4 I've tiled it for you.\w8\w8 Does it look ok?]\e"
}
Select.SetWallpaper_2
{
	"%(wdc)\![set,wallpaper,%(Wallpaperfile),stretch]\0\s[114]%(t)Ok##\w4 I've stretched it across for you.\w8\w8 Does it look ok?]\e"
}

Select.WallpaperSpan
{
	"%(wdc)\![set,wallpaper,%(Wallpaperfile),span]\0\s[114]%(t)Ok##\w4 I've spanned it across both monitors for you.\w8\w8 Does it look ok?]\e"
}

Select.SetWallpaper_Cancel
{
	"%(wdc)\0\s[0]%(t)Ok##\w4 let me know if you change your mind.]\e"
}


//---- OnInstallBegin -------------------------------------------------------
 
OnInstallBegin
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[606]%(t)Ah##\w4 alright##\w4 give me just a moment to install this...]\e"
	}
	else
	{
		"%(wdc)\0\s[114]%(t)You need something installed?\w8\w8\s[111\] One moment## please.]\e"
	}
}
 
OnInstallComplete
{
	"\0%(wdc)"
 	--
	if holdingObsidian == 1
	{
		if reference0 == "shell"
		{	
			if reference1 == "Hypothetical Shell that doesn't actually exist"
			{
				"\s[0]We have installed Hypothetical Shell.\w8\1\s[10]Truncated for space.\e"
			}
			else //For any other shell they may install.
			{
				"\s[610]%(t)Oh##\w4 a new outfit?\w8\w8\s[604\] Thank you## %(username)## that's kind of you.]\w8\w8\1%(holdnoise)\e"
				//%(reference1) here would be the name of the shell they installed. Replace if needed.
			}
		}
		elseif reference0 == "ghost" //if the type of the file they're installing is a ghost.
		{
			"\s[600]%(t)I've installed] %(reference1).\w8\w8 %(t)Would you like to call them here?]\n\n"
			--
			"\![*]\q[Call %(reference1),callghost]\n/
			\![*]\q[Change to %(reference1),changeghost]\n\n/
			\![*]\q[No thanks,changenothanks]\n"
		}
		elseif reference0 == "balloon" //if the type of file is a balloon
		{
			"\s[600]%(t)I've installed a new balloon called] %(reference1).\w8\w8\1%(holdnoise).\e"
			//Reference1 here would be the name of the balloon. Replace as needed.
		}
		elseif reference0 == "plugin" //if the type of file is a plug-in, like a saori of some kind.
		{
			"\s[600]%(t)I've installed a plugin called] %(reference1).\w8\w8\1%(holdnoise).\e"
			//Reference1 here would be the name of the plug-in. Replace as needed.
		}
		elseif reference0 == "calendar skin"
		{
			"\s[600]%(t)I've installed a calendar skin called] %(reference1).\w8\w8\1%(holdnoise)\e"
		}
		else
		{
			"\s[600]%(t)Installation complete.]\w8\w8\1%(holdnoise)\e"
		}
	}
	else
	{
		if reference0 == "shell"
		{	
			if reference1 == "Hypothetical Shell that doesn't actually exist"
			{
				"\s[0]We have installed Hypothetical Shell.\w8\1\s[10]Truncated for space.\e"
			}
			else //For any other shell they may install.
			{
				"\s[110]%(t)Oh##\w4 a new outfit?\w8\w8\s[104\] Thank you## %(username)## that's kind of you.]\e"
				//%(reference1) here would be the name of the shell they installed. Replace if needed.
			}
		}
		elseif reference0 == "ghost" //if the type of the file they're installing is a ghost.
		{
			"\s[0]%(t)I've installed] %(reference1)%(t).\w8\w8 Would you like to call them here?]\n\n"
			--
			"\![*]\q[Call %(reference1),callghost]\n/
			\![*]\q[Change to %(reference1),changeghost]\n\n/
			\![*]\q[No thanks,changenothanks]\n"
		}
		elseif reference0 == "balloon" //if the type of file is a balloon
		{
			"\s[0]%(t)I've installed a new balloon called] %(reference1).\w8\w8\1%(sCatNoise)\e"
			//Reference1 here would be the name of the balloon. Replace as needed.
		}
		elseif reference0 == "plugin" //if the type of file is a plug-in, like a saori of some kind.
		{
			"\s[0]%(t)I've installed a plugin called] %(reference1).\w8\w8\1%(sCatNoise)\e"
			//Reference1 here would be the name of the plug-in. Replace as needed.
		}
		elseif reference0 == "calendar skin"
		{
			"\s[0]%(t)I've installed a calendar skin called] %(reference1).\w8\w8\1%(sCatNoise)\e"
		}
		else
		{
			"\s[0]%(t)Installation complete.]\w8\w8\1%(sCatNoise)\e"
		}
	}
	
}

Select.callghost
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(t)Certainly##\w4 I'll call them right away.]\![call,ghost,lastinstalled]"
	}
	else
	{
		"\0\s[550]%(t)Certainly##\w4\s[500] I'll call them right away.]\![call,ghost,lastinstalled]"
	}
}

Select.changeghost
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(t)Alright##\w4 I'll see you later##\w4 %(username).]\w8\w8\1%(holdnoise)\w8\w8\![change,ghost,lastinstalled]\e"
	}
	else
	{
		"\0\s[104]%(t)Alright##\w4 I'll see you later##\w4 %(username).]\w8\w8\1%(sCatNoise)\w8\w8\![change,ghost,lastinstalled]\e"
	}
}

Select.changenothanks
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(t)Alright##\w4 if you change your mind let me know.]\e"
	}
	else
	{
		"\0\s[0]%(t)Alright##\w4 if you change your mind let me know.]\e"
	}
}
//---- OnInstallFailure -------------------------------------------------------

OnInstallFailure
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[606]%(t)Sorry## something went wrong.\n\n\w8\w8" //this first bit of dialogue begins the explanation of what happened. You can replace this with an appropriate intro statement.
		--
		if reference0 == "unsupported"
		{
		"This file isn't supported.]\w8\w8\1%(holdnoise)\e"
		}	
		elseif reference0 == "extraction"
		{
		"I couldn't extract it properly.]\w8\w8\1%(holdnoise)\e"
		}
	}
	else
	{
		"%(wdc)\0\s[106]%(t)Sorry## something went wrong.\n\n\w8\w8" //this first bit of dialogue begins the explanation of what happened. You can replace this with an appropriate intro statement.
		--
		if reference0 == "unsupported"
		{
			"This file isn't supported.]\w8\w8\1%(sCatNoise)\e"
		}
		elseif reference0 == "invalid type"
		{
			"Something is wrong in the install.txt.]\w8\w8\1%(sCatNoise)"
		}
		elseif reference0 == "extraction"
		{
			"I couldn't extract it properly.]\w8\w8\1%(sCatNoise)\e"
		}
	}
}
 
 //--OnInstallRefuse
 //If the file you dropped can't be installed with this ghost.
 
OnInstallRefuse
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[606]%(t)Sorry##\w4 I can't install this.\w8\w8 It looks like it's for] %(reference0) instead.\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"%(wdc)\0\s[106]%(t)Sorry##\w4 I can't install this.\w8\w8 It looks like it's for] %(reference0) instead.\w8\w8\1%(sCatNoise)\e"
	}
}


//**** Uninstallation ******************************************


//When you select the uninstall option in the menu.
OnVanishSelecting
{
	if holdingObsidian == 1
	{
		"\0\s[600]* (Are you really going to uninstall him while he's holding his cat?)\e"
	}
	else
	{
		"\0\s[0]* (Is it time to say goodbye?)\e"
	}
}


//When you decide to uninstall them. 
OnVanishSelected
{
	if holdingObsidian == 1
	{
		"\0\s[600]* (You say farewell.)\w8\w8\s[610]\n\nOh,\w8\s[606] alright then.\w8\w8\s[604] Take care of yourself,\w4 %(username).\w8\w8\s[600] I hope you fare well wherever life takes you.\w8\w8\1%(holdnoise)\w8\w8\e"
	}
	else
	{
		"\0\s[0]* (You say farewell.)\w8\w8\s[110]\n\nOh,\w8\s[106] alright then.\w8\w8\s[104] Take care of yourself,\w4 %(username).\w8\w8\s[0] I hope you fare well wherever life takes you.\w8\w8\1%(sCatNoise)\w8\w8\e"
	}
}


//If you select Uninstall from the menu, but decide not to do it.
OnVanishCancel
{
	if holdingObsidian == 1
	{
		"\0\s[600]* (Not just yet,\w4 They're too cute together.)\e"
	}
	else
	{
		"\0\s[0]* (Not just yet.)\e"
	}
}

//--TalkVanishButtonHold
//I believe this calls if you click and hold the button on either the menu option for uninstalling them, or possibly the option itself. Be careful if you're trying to test this! You'd hate to uninstall all your hard work, right? I'd probably just make sure the dialogue looks right via Script Input and leave it at that.
//[Zi] I've done a lot of testing and never gotten this to show. Dont know what it does.

TalkVanishButtonHold
{
	"\0* (...)\e"
}


 //---- OnVanished -----------------------------------------
 //OnVanished is a weird little function. Basically, if you uninstall a ghost, it'll automatically go back to the last ghost you were using. They'll then say this line of dialogue about the ghost you just uninstalled. This is very annoying to test as you can imagine! But unlikely to come up super often, I bet. You might as well be thorough and fill this out as well. Make sure to set up both their poses immediately so they both appear when it switches back to them.
 
OnVanished
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[610]Oh...\w8\w8 %(reference0) is gone..?\w8\w8\1Mrr...\w8\w8\0\s[631]\n\n%(wdf)SHH,\w4 IT'S ALRIGHT, SWEET GIRL.\e"
	}
	else
	{
		"%(wdc)\0\s[206]Oh...\w8\w8 %(reference0) is gone..?\w8\w8\1\s[1002]Mrr...\w8\w8\0\s[401]\n\n%(wdf)SHH,\w4 IT'S ALRIGHT, SWEET GIRL.\e"
	}
	//reference0 here is the name of the other ghost.
}

//---- OnBIFFBegin ---------------------------------------------------------------
//When you first tell the ghost to check your email. An intro statement, if you will. Replace with whatever you like.
 
OnBIFFBegin
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[607]%(t)...My hands are a little full at the moment##\w4 but alright.\w8\w8 Give me a moment.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"%(wdc)\0\s[104]%(t)Sure## I can check for emails.\w8\w8\s[500\] Give me a moment.]\e"
	}
}

 
 //---- OnBIFFComplete ---------------------------------------------------------------
 //After they've succeeded in checking your mail, they'll report back with how many new emails you have. Replace the dialogue with whatever would be character appropriate.
 
OnBIFFComplete
{
	if reference7 != ""
	{
		_headers = reference7
		_headercount = ARRAYSIZE(_headers) //see how long the list is
		headerlist = ""
		_i = 0
		while _i < _headercount
		{
			_next = (_i + 1) //Look at the next header
			if "<" _in_ _headers[_next] && "@" _in_ _headers[_next] && ">" _in_ _headers[_next] //If it's got an email address, it must be a legit one
			{
				headerlist += "|br%(_headers[_i])" //Add the current header we have to the header list, move on to the next
			}
			else
			{
				headerlist += "|br%(_headers[_i])" //Add the first part to the header list, then do a loop to gather the remaining pieces
				
				_ii = 0
				while _ii < (_headercount - _i - 1) //The amount of headers - how far we are through them (-1) so that if you're at the end of the headers it'll stop instead of just making commas
				{
					_next = (_i + 1) //Look at the next header
					if !("<" _in_ headers[_next] && "@" _in_ _headers[_next] && ">" _in_ _headers[_next]) //If there is no email address, add the particle to the list
					{
						headerlist += ",%(_headers[_next])"
						_headers[_next] = IARRAY //Erase the duplicate header
					}
					_ii++
				}
			}
			_headercount = ARRAYSIZE(_headers) //Recount how many headers we got
			_i++
		}
		headerlist = ERASE(headerlist,0,3) //erases the first |br so it doesn't start on a line break
		headerlist = REPLACE(headerlist,"|br","\n\n") //Replace the |brs with line break
	}
	--
	
	if holdingObsidian == 1
	{
		"\0%(wdc)"
		--
		if reference0 == 0 //If you have no new mail.
		{
			"\s[600]%(t)There are no new emails.]"
		}
		elseif reference0 == 1
		{
			"\s[600]%(t)You have] %(reference0) new email."
		}
		else
		{
			"\s[600]%(t)You have] %(reference0) new emails."
		}
		--
		"\w8\w8\1%(holdnoise)"
		--
		if reference7 != ""
		{
			"\0\n\n%(t)Would you like to see the headers?]\n\n\![*]\q[See the headers,headers]\n\![*]\q[No thank you,cancelnodialogue]"
		}
		--
		"\e"
	}
	else
	{
		"\0%(wdc)"
		--
		if reference0 == 0 //If you have no new mail.
		{
			"\s[0]%(t)There are no new emails.]"
		}
		elseif reference0 == 1 //If you have one new email.
		{
			"\s[0]%(t)You have one new email.]"
		}
		elseif reference0 > 1 && reference0 < 11 //If you have more than one email but less than eleven.
		{
			"\s[0]%(t)You have] %(reference0) new emails."
			//reference0 here stores the amount of new email it finds.
		}
		elseif reference0 > 100 //If there are over one hundred new emails.
		{
			"\s[106]%(t)You have] %(reference0) unread emails."
		}
		else //For any other number of emails.
		{
			"\s[0]%(t)You have] %(reference0) new emails."
		}
		--
		"\w8\w8\1%(sCatNoise)"
		--
		if reference7 != ""
		{
			"\0\n\n%(t)Would you like to see the] header"
			--
			if reference0 != 1; {"s"}
			--
			"?\n\n\![*]\q[See the headers,headers]\n\![*]\q[No thank you,cancelnodialogue]"
		}
		--
		"\e"
	}
}

Select.headers
{
	"\_q%(headerlist)\x"
}

 //---- OnBIFFFailure ---------------------------------------------------------------
 //Various error messages that can happen when your ghost tries to connect to an email account. Replace the dialogue as appropriate.
 
OnBIFFFailure
{
	if holdingObsidian == 1
	{
		"\0%(wdc)"
		--
		if reference0 == "timeout" //If the connection times out.
		{
			"\0\s[606]%(t)Sorry##\w4 the connection timed out.]"
		}
		elseif reference0 == "kick" //If the account blocks the ghost from accessing it. I think gmail may do this at first to try and protect your account from unapproved applications using it. It gives you the option to change the setting in the warning email they send you about it.
		{
			"\0\s[606]%(t)Sorry## I can't access the account.]"
		}
		elseif reference0 == "defect" //If the information put into the POP menu is wrong.
		{
			"\0\s[606]%(t)Sorry## the settings aren't right.\w8\w8\s[0\] You can reset them in the POP menu.]\![open,configurationdialog]"
		}
		elseif reference0 == "artificial"
		{
			"\0\s[610]%(t)Oh##\w4 did you change your mind?]"
		}
		else //if there's some other kind of error.
		{
			"\0\s[606]%(t)Sorry## I can't connect to the account.]\w8\w8 The error is '%(reference0)'."
			
			//reference0 here stores the error message the email server would have given the ghost, hopefully.
		}
		--
		"\w8\w8\1%(holdnoise)"
	}
	else
	{
		"\0%(wdc)"
		--
		if reference0 == "timeout" //If the connection times out.
		{
			"\0\s[106]%(t)Sorry##\w4 the connection timed out.]"
		}
		elseif reference0 == "kick" //If the account blocks the ghost from accessing it. I think gmail may do this at first to try and protect your account from unapproved applications using it. It gives you the option to change the setting in the warning email they send you about it.
		{
			"\0\s[106]%(t)Sorry## I can't access the account.]"
		}
		elseif reference0 == "defect" //If the information put into the POP menu is wrong.
		{
			"\0\s[106]%(t)Sorry## the settings aren't right.\w8\w8\s[0\] You can reset them in the POP menu.]\![open,configurationdialog]"
		}
		elseif reference0 == "artificial"
		{
			"\0\s[110]%(t)Oh##w4 did you change your mind?]\e"
		}
		else //if there's some other kind of error.
		{
			"\0\s[106]%(t)Sorry## I can't connect to the account.]\w8\w8 The error is '%(reference0)'."
			
			//reference0 here stores the error message the email server would have given the ghost, hopefully.
		}
		--
		"\w8\w8\1%(sCatNoise)"
	}
}

//Replace the dialogue in the next set of functions as appropriate. You can easily test these messages using the Developer panel. Go to Open at the bottom of it and choose one of the four Update Event options to simulate a Ghost's update process. I highly recommend doing this at LEAST once if you're going to use this feature to make sure it flows well.


OnUpdateCheckComplete //When the ghost finishes checking for updates
{
	if reference0 != "none" //If there are no new files
	{
		_files = ARRAYSIZE(reference1)
		_files++
		if AutoUpdateCheck == 1
		{
			AutoUpdateCheck = 0
			updateavailable = 1
			askedalready = 1
			"\e"
		}
		--
		"\0\s[550]%(wdc)%(t)There are] %(_files) %(t)new files.\w8\w8 Do you want to update now?]\n\n\![*]\q[Update now,StartUpdate]\n\![*]\q[No thanks,cancelnodialogue]\e"
	}
	else
	{
		updateavailable = 0
		if AutoUpdateCheck == 1 //This if stops the dialogue from displaying if this check was performed automatically. They'll tell the user later.
		{
			AutoUpdateCheck = 0
			"\e"
		}
		--
		if holdingObsidian == 1
		{
			"\0\s[600]%(wdc)There are no new files.\![raise,OnDialogueVars,finishboot]\e"
		}
		else
		{
			"\0\s[0]%(wdc)There are no new files.\![raise,OnDialogueVars,finishboot]\e"
		}
	}
}

Select.StartUpdate
{
	fromCheck = 1
	"\![updatebymyself]"
}

OnUpdateBegin
{
	booting = 2
	if fromCheck == 1
	{
		fromCheck = 0
		"\0\s[500]Alright,\w4 beginning update...\w8\w8\e"
	}
	else
	{
		if holdingObsidian == 1
		{
			"\0%(wdc)\s[607]%(t)...My hands are a bit full##\w4 but alright##\w4 I'll check.]\w8\w8\e"
		}
		else
		{
			"\0%(wdc)\s[0]%(t)Ok##\w4\s[500\] I'll check for updates.]\w8\w8\e"
		}
	}
}

//If the ghost finds new files to update with.
OnUpdateReady
{
	booting = 2
	_filesavailable = reference0 + 1
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[600]%(t)There are] %(_filesavailable) new files.\w8\w8\e"
	}
	else
	{
		"\0%(wdc)\s[550]%(t)There are] %(_filesavailable) new files.\w8\w8\s[500]\e"
	}
	//reference0 here storing the number of new files. You don't have to use it if you don't want to.
	//[Zi] Note that it starts counting from 0, to have it be accurate you'll have to add a +1 to it
}


//When the ghost has finished the update process.
OnUpdateComplete
{
	UpdateVars //Directs to a function in Bootend that checks if the proper variables have been set
	--
	if holdingObsidian == 1
	{
		if reference0 == "none" //if the ghost had nothing to update with
		{
			"\0%(wdc)\s[600]%(t)There are no new files.]\![raise,OnDialogueVars,finishboot]"
		}
		else //if the ghost has updated successfully
		{
			"\0%(wdc)\s[604]%(t)Update complete.]\![raise,OnDialogueVars,finishboot]\e"
		}
	}
	else
	{
		if reference0 == "none" //if the ghost had nothing to update with
		{
			"\0%(wdc)\s[0]%(t)There are no new files.]\![raise,OnDialogueVars,finishboot]\e"
		}
		else //if the ghost has updated successfully
		{
			"\0%(wdc)\s[104]%(t)Update complete.]\![raise,OnDialogueVars,finishboot]"
		}
	}
	--
	" %(t)Do you want to see the changelog?]\n\n\![*]\q[Yes,OnChangelog]\n\![*]\q[No,nochangelog]\e"
}

Select.nochangelog
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(t)Alright##\w4 if you change your mind just let me know.]\e"
	}
	else
	{
		"\0\s[0]%(t)Alright##\w4 if you change your mind just let me know.]\e"
	}
}

//Error messages if the update process fails in some way.
OnUpdateFailure
{
	"\![raise,OnDialogueVars,finishboot]"
	--
	if holdingObsidian == 1
	{
		if reference0 == "timeout" //if the connection times out
		{
			"\0\s[606]Sorry, the connection timed out."
		}
		elseif reference0 == "md5 miss"
		{
			"\0\s[606]The MD5 values don't match on file %(Update_Remaining),\w4 you should let Zichqec know about that."
		}
		elseif reference0 == "artificial"
		{
			"\0\s[606]Oh##\w4 did you change your mind?]"
		}
		else //for other errors
		{
			"\0\s[606]Sorry,\w4 I got an error: '%(reference0)'."
		}
		--
		"\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		if reference0 == "timeout" //if the connection times out
		{
			"\0\s[106]Sorry, the connection timed out."
		}
		elseif reference0 == "md5 miss"
		{
			"\0\s[106]The MD5 values don't match on file %(Update_Remaining),\w4 you should let Zichqec know about that."
		}
		elseif reference0 == "artificial"
		{
			"\0\s[106]Oh##\w4 did you change your mind?]"
		}
		else //for other errors
		{
			"\0\s[106]Sorry,\w4 I got an error: '%(reference0)'."
		}
		--
		"\w8\w8\1%(sCatNoise)\e"
	}
}

//You may want to replace these messages with just '...' to make updates take less time. Trust us on this one.
 
OnUpdate.OnDownloadBegin //replaceframe I want him looking at a screen for this
{
	booting = 2
	if holdingObsidian == 1
	{
		"\b2\_q\0\s[630]* (Downloading %(reference0)...)\n\n"
	}
	else
	{
		"\b2\_q\0\s[500]* (Downloading %(reference0)...)\n\n"
	}
	--
	_Update_Process = TOINT(reference1) + 1
	_Update_Total = TOINT(reference2) + 1
	Update_Remaining = _Update_Total - _Update_Process

	//defining starting points
	_PointA = 1
	_PointB = 1

	//defining text buffers beforehand, otherwise they don't display right
	_txt = ""

	//loop calculates how many check boxes to display based on the variables above
	_counter = 0
	while _PointA <= _Update_Process
	{
		_txt += "C"
		_PointA++
		_counter++
		if _counter >= 15
		{
			_txt += "\n"
			_counter = 0
		}
	}
	//see above except for blank boxes
	while _PointB <= Update_Remaining
	{
		_txt += "D"
		_PointB++
		_counter++
		if _counter >= 15
		{
			_txt += "\n"
			_counter = 0
		}
	}
	--
	//using the text buffers to display the correct number of boxes
	"%(wdf)\f[height,200%]%(bold)%(_txt)%(reg)\n\n%(_Update_Process) of %(_Update_Total)"
}

 //---- OnUpdate.OnMD5CompareFailure ---------------------------------------------------
 //If the MD5 values don't match. If you follow my Network Update directions carefully, this shouldn't come up very often, but don't be surprised if you run into it every now and then by forgetting a file here or there.
 
OnUpdate.OnMD5CompareFailure
 {
	"\![raise,OnDialogueVars,finishboot]"
	--
	if holdingObsidian == 1
	{
		"\0\s[610]The MD5 values don't match on file %(Update_Remaining).\w8\w8\e"
	}
	else
	{
		"\0\s[501]The MD5 values don't match on file %(Update_Remaining).\w8\w8\e"
	}
 }

 
 
 //**** Headlines and RSS Feeds *********************************************************
 //This section has to do with the RSS feeds option on your ghost. If you drag and drop a url on them, they'll add it to a list you can access via the right-click menu, and they'll tell you the last set of updates for the site. This works best with RSS feeds I think, but you can experiment with other sites to see how it works.
 //The headlines you see under the tab are in the headline folder under your base SSP install. So it'd be SSP\headlines. You should see the folders for each linked headline in there. I've very rarely ever messed with them or used them. Likewise, your RSS feeds you've added will be under SSP\rss and I don't think that option will appear in the headlines/RSS tab until you add an RSS feed to a ghost. If you want to clear your RSS feeds or headlines, just delete either of those two folders.
 
 //This dialogue comes up when you select something in your RSS feed as an intro, like the other On[Thing]Begin things we've seen so far. Replace as you need.
OnHeadlinesenseBegin
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[606]%(t)...My hands are a bit full## but alright.]\w8\w8\s[630] %(reference0)...\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[550]%(t)Alright##\w4 I'll open] %(reference0).\w8\1%(sCatNoise)\e"
	}
}

//This actually displays the feed. My set-up for it is pretty simple but gets the job done, it just has the name of the feed, a line space, then a list of links. You shouldn't have to edit any of these and I probably wouldn't honestly.
 
OnHeadlinesense.OnFind
{
	//----  What page You're on
 	if reference2 == "First" || reference2 == "First and Last"
	{
 		//---- First page
		if holdingObsidian == 1
		{
			"\0%(wdcb)\s[600]%(reference0):"
		}
		else
		{
			"\0%(wdcb)\s[500]%(reference0):"
		}
 	}
	elseif reference2 == "Next"
 	{
		//---- Second page
 		if holdingObsidian == 1
		{
			"\0%(wdcb)\s[600]%(reference0):"
		}
		else
		{
			"\0%(wdcb)\s[500]%(reference0):"
		}
	}
 	elseif reference2 == "Last"
	{
 		//---- Last page
		if holdingObsidian == 1
		{
			"\0%(wdcb)\s[600]%(reference0):"
		}
		else
		{
			"\0%(wdcb)\s[500]%(reference0):"
		}
 	}
	--
 	//---- Headlines
	"\n\n%reference3\n"
 	--
	//---- Pages
 	if reference2 == "First" || reference2 == "Next"
	{
 		//---- Bottom buttons
		"\![*]\q[Next,] - \![*]\q[Stop,Headline_Cancel]\e"
 	}
	else
 	{
		//---- Bottom buttons
 		"\![*]\q[Stop,Headline_Cancel]\e"
 	}
	
}


Select.Headline_Cancel
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[600]%(t)Alright##\w4 let me know if you want to see it again.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[102]%(t)Alright##\w4 let me know if you want to see it again.]\w8\w8\1%(sCatNoise)\e"
	}
}

 //---- OnHeadlinesenseComplete -------------------------------------------------------
 //This is an odd function. As far as I can gather, this is if the headline information gathering was successful, but there's no new information to report. Possibly if none of the feeds have updated? I'm a little fuzzy on this one.
 
OnHeadlinesenseComplete
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[600]%(t)There's no update.] %(reference0).\e"
	}
	else
	{
		"\0%(wdc)\s[0]%(t)There's no update.] %(reference0).\e"
	}
	//reference0 here supposedly always stores the value no update? Again this isn't hugely clear from what I can see. Anyway, this dialogue has never come up for me while using a ghost, so perhaps someone else who runs into it can offer more clarity. For now, you can leave it as is, or write up something else in here if you like.
}

 //---- OnHeadlinesenseFailure ---------------------------------------------------------
 //This one is more clearly for when the ghost can't get the information it needs about the RSS feed in question.
 
OnHeadlinesenseFailure
{
	if holdingObsidian == 1
	{
		"%(wdc)\0\s[606]%(t)Sorry##\w4 the feed can't be updated.\w8\w8 "
		--
		if reference0 == "can't download" //if they can't download the rss feed for some reason
		{
			"I can't download it."
		}
		elseif reference0 == "can't analyze" //if they can't read the file for some reason
		{
			"I can't analyze it."
		}
		else //other errors
		{
			"I'm not certain why."
		}
		--
		"]\w8\w8\1%(holdnoise)\e" //And here is the final /e, so you don't need to include it in the if statements above. Another one of the very rare cases this occurs.
	}
	else
	{
		"%(wdc)\0\s[108]%(t)Sorry##\w4 the feed can't be updated.\w8\w8 "
		--
		if reference0 == "can't download" //if they can't download the rss feed for some reason
		{
			"I can't download it."
		}
		elseif reference0 == "can't analyze" //if they can't read the file for some reason
		{
			"I can't analyze it."
		}
		else //other errors
		{
			"I'm not certain why."
		}
		--
		"]\w8\w8\1%(sCatNoise)\e" //And here is the final /e, so you don't need to include it in the if statements above. Another one of the very rare cases this occurs.
	}
}



//This will begin the creation of the updates2.dau file. Not unlike the other beginning functions you've seen throughout this file. Replace with whatever you like.
OnUpdatedataCreating
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(wdc)"
	}
	else
	{
		"\0\s[104]%(wdc)"
	}
	--
	"%(t)Creating the] updates2.dau file.\e"
}

//After the updates2.dau file has been successfully created. Replace with whatever.
OnUpdatedataCreated
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(wdc)"
	}
	else
	{
		"\0\s[104]%(wdc)"
	}
	--
	"%(t)Successfully created] updates2.dau.\e"
}


//Along the same lines, this is when they begin creating a .nar file for your ghost. .nars are the format most ghosts will be in, something similar to a .zip file, and this is the format you'll be distributing your ghost in most likely. Replace the dialogue with whatever you like.
OnNarCreating
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(wdc)"
	}
	else
	{
		"\0\s[104]%(wdc)"
	}
	--
	"%(t)Creating the] .nar file.\e"
}

//After the nar file has been successfully created.
OnNarCreated
{
	if holdingObsidian == 1
	{
		"\0\s[600]%(wdc)%(t)"
	}
	else
	{
		"\0\s[104]%(wdc)%(t)"
	}
	--
	"Successfully created] '%(reference0)'."
	--
	if holdingObsidian == 1
	{
		"\w8\w8\1%(holdnoise)\e"
	}
	else
	{ 
		"\w8\w8\1%(sCatNoise)\e"
	}
	//reference0 here will be the filename of the nar you just created. It should drop the nar in the folder where all your ghosts are listed, ssp\ghost\.
}

//****　Clock Synchronization　**********************************************************
//**** 미카 (http://homepage2.nifty.com/ko-ki/)의 사전을 참고했습니다．감사＞こ 나무 성
//This set of functions was done by the above Korean coder, I think. I'll leave their comment there untouched. 
//If you right click your ghost and go into the Utilities menu, there's an option called NTP Time Sync. That's what this is for!
 


//As with the others you've seen above, this is the beginning bit of dialogue for this process.
OnSNTPBegin
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[606]%(t)Ah##\w4 my hands are a little full##\w4 but alright.\w8\w8\s[600\] I'll check your clock against] %(reference0).\w8\w8\1%(holdnoise).\e"
	}
	else
	{
		"\0%(wdc)\s[500]%(t)Sure##\w4 let me check your clock against] %(reference0).\w8\w8\1%(sCatNoise)\e"
	}
	//%(reference0) here is the site they'll be using to check your clock. I wouldn't worry too much about what the site is or where it's defined, it should be accurate. Replace the dialogue with what you need, you don't have to use reference0 if you don't want to.
}



//Now the ghost is going to compare the current time of your computer's system to the time of the site they connected to. Most of this you don't have to touch, just replace the dialogue as indicated.
OnSNTPCompare
 {
 	"%(wdc)Retrieved Time: %reference1[1]/%reference1[2]/%reference1[0] %reference1[3]:%reference1[4]:%reference1[5]\w2\n/
	Your Time: %reference2[1]/%reference2[2]/%reference2[0] %reference2[3]:%reference2[4]:%reference2[5]\w2\n/
 	\n"
	--
	if holdingObsidian == 1
	{
		if reference3 == 0 //if your clock is already accurate.
		{
			"\0\s[604]%(t)Your clock is accurate.]\w8\w8\1%(holdnoise)\e" //replace this with whatever message you like.
		}
		else //if your clock doesn't match
		{
		//you can redo this top line up to the \n\n[half] part, but leave the \q options alone.
			"\0\s[600]%(t)Your clock doesn't match.\w8\w8 Should I fix it?]\n\n[half]/
			\![*]\q[Fix it,OnSNTPEXECUTE]\n/
			\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
		}
	}
	else
	{
		if reference3 == 0 //if your clock is already accurate.
		{
			"\0\s[104]%(t)Your clock is accurate.]\w8\w8\1%(sCatNoise)\e" //replace this with whatever message you like.
		}
		else //if your clock doesn't match
		{
		//you can redo this top line up to the \n\n[half] part, but leave the \q options alone.
			"\0\s[0]%(t)Your clock doesn't match.\w8\w8 Should I fix it?]\n\n[half]/
			\![*]\q[Fix it,OnSNTPEXECUTE]\n/
			\![*]\q[Leave it alone,OnSNTPCANCEL]\e"
		}
	}
 }

////After they've fixed your clock. Note the \6 tag - that's what actually changes the clock. Do not remove that tag. Replace the rest with what you want.
OnSNTPEXECUTE
{
	if holdingObsidian == 1
	{
		"\6\0%(wdc)\s[604]%(t)Ok##\w4 I've fixed it for you.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\6\0%(wdc)\s[104]%(t)Ok##\w4 I've fixed it for you.]\w8\w8\1%(sCatNoise)\e"
	}
}


//If you decide not to change your clock when they tell you it doesn't match. Replace with what you want.
OnSNTPCANCEL
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[604]%(t)Ok## if you change your mind just let me know.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[104]%(t)Ok## if you change your mind just let me know.]\w8\w8\1%(sCatNoise)\e"
	}
}

//If they can't change the clock for some reason, possibly because the site timed out but it could be anything. Replace with what you want.
 
OnSNTPFailure
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[606]%(t)Sorry##\w4 something went wrong.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[106]%(t)Sorry##\w4 something went wrong.]\w8\w8\1%(sCatNoise)\e"
	}
}



//This is when you change the resolution of your monitor while your ghost is running. Don't mess with any of this, it should be fine as is.
OnDisplayChange
{
	displaybpp    = reference0
 	displaywidth  = reference1
	displayheight = reference2
}




OnScreenSaverStart
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[610]%(t)Ah- what's that?]\e"
	}
	else
	{
		"\0%(wdc)\s[110]%(t)Ah- what's that?]\e"
	}
}

 //---- OnScreenSaverEnd -------------------------------------------------------
 //When you wiggle your mouse and stop your screensaver.
 
OnScreenSaverEnd
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[610]...Huh.\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[110]...Huh.\w8\w8\1%(sCatNoise)\e"
	}
}


/*
//This supposedly is for when a program starts but I have honestly never gotten it to work or seen it happen. I wouldn't sweat these three related functions too much.
OnApplicationBoot
{
	"\0\s[0]%(reference0) just started.\e"
}

//See above, but for the program closing.
OnApplicationClose
{
	"\0\s[0]%(reference0) has closed.\e"
}

//I believe this is for when the program detailed above opens a document file of some kind.
OnApplicationFileOpen
{
	"\0\s[0]Opening %(reference1).\e"
}
*/



 //---- OnBatteryLow -----------------------------------------------------------------
 //This is for when your laptop's battery is low. I don't have a laptop, so I've never really been able to test this. Perhaps someone with a laptop can report back to me with more details about the battery related functions?
 
OnBatteryLow
 {
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[610]%(t)Your battery is getting pretty low.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[110]%(t)Your battery is getting pretty low.]\w8\w8\1%(sCatNoise)\e"
	}
	//reference0 here is the amount of battery power. Replace as you like.
 }
 
 //--OnBatteryCritical-----------------------------------------------------------------
 //Likewise, this is for if your battery is REALLY low. Replace as you like.
 
OnBatteryCritical
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[610]%(t)Your battery is very low##\w4 perhaps you should find a charger?]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[110]%(t)Your battery is very low##\w4 perhaps you should find a charger?]\w8\w8\1%(sCatNoise)\e"
	}
}
 
//--OnBatteryNotify--------------------------------------------------------------------
//This I believe checks to see if your laptop is plugged in or not. Originally this bit of code was commented out, so I suspect it may not work. It may need a plug-in of some sort. Either way, you can delete it or fill it out as you like.
//Actually investigating this, leaving this in makes it so the ghost updates you about whether or not your computer is plugged-in constantly, which makes no sense for desktops. No doubt why it was commented out. Just leave it be.

/*
OnBatteryNotify
{
	if reference2 == "online" //If your laptop is plugged in
	{
		"\0\s[0]The laptop is plugged in.\e"
	}
	elseif reference2 == "offline" //If you unplug your laptop
	{
		"\1\s[10]The laptop is not plugged in.\w8\0\s[0]Watch your battery.\e"
	}
}
*/



OnSysResourceLow
{
	if holdingObsidian == 1
	{
		"\0%(wdc)\s[606]%(t)Your system resources are getting low.]\w8\w8\1%(holdnoise)\e"
	}
	else
	{
		"\0%(wdc)\s[106]%(t)Your system resources are getting low.]\w8\w8\1%(sCatNoise)\e"
	}
}


OnShellScaling //replaceframe on all of these, need him talking to obsidian and being concerned
{
	nowscale = reference0
	if holdingObsidian == 1
	{
		if reference0 > 100 //If getting bigger
		{
			"%(wdc)\0\s[606]%(t)Ah##\w4 hello] %(username).\w8\w8\1%(holdnoise)\w8\w8\0\s[630]\n\n%(wdf)HA, YOU'RE STUCK WITH ME THIS TIME.%(reg)\e"
		}
		elseif reference0 < 100 //If getting smaller
		{
			"%(wdc)\0\s[606]%(t)Ah##\w4 are we in your way?]\w8\w8\1%(holdnoise)\w8\w8\0\s[607]\n\n%(wdf)AT LEAST I'VE GOT HOLD OF YOU,\w4 THIS TIME...%(reg)\e"
		}
		else //Normal size
		{
			"%(wdc)\0\s[606]%(t)Thank you],\w4 %(username).\w8\w8\1%(holdnoise)\e"
		}
	}
	elseif sHoldingObsidian == 1
	{
		if reference0 > 100 //If getting bigger
		{
			"%(wdc)\0\s[106]%(t)Ah##\w4 hello] %(username).\e"
		}
		elseif reference0 < 100 //If getting smaller
		{
			"%(wdc)\0\s[106]%(t)Ah##\w4 am I in your way?]\e"
		}
		else //Normal size
		{
			"%(wdc)\0\s[106]%(t)Thank you],\w4 %(username).\e"
		}
	}
	else
	{
		if reference0 > 100 //If getting bigger
		{
			"%(wdc)\0\s[106]%(t)Ah##\w4 hello] %(username).\w8\w8\1%(catnoises).\w8\w8\0\s[400]\n\n%(wdf)OBSIDIAN,\w4 BE MINDFUL OF YOUR NEW SIZE AND DON'T CRUSH ANYTHING.%(reg)\e"
		}
		elseif reference0 < 100 //If getting smaller
		{
			"%(wdc)\0\s[106]%(t)Ah##\w4 are we in your way?]\w8\w8\1%(catnoises).\w8\w8\0\s[402]\n\n%(wdf)OBSIDIAN,\w4 DON'T BE SNEAKING OFF INTO ANY SMALL CREVICES.%(reg)\e"
		}
		else //Normal size
		{
			"%(wdc)\0\s[106]%(t)Thank you],\w4 %(username).\w8\w8\1%(catnoises).\w8\w8\0\s[402]\e"
		}
	}
}

OnOtherGhostChanged
{
	if sHoldingObsidian == 1
	{
		if reference0 == "RYS-0825"
		{
			"\![get,property,OnObsiReappear,currentghost.scope(0).rect]"
		}
	}
}

OnOtherGhostClosed
{
	if sHoldingObsidian == 1
	{
		if reference0 == "RYS-0825"
		{
			"\![get,property,OnObsiReappear,currentghost.scope(0).rect]"
		}
	}
}

OnObsiReappear
{
	sHoldingObsidian = 0
	_XCoord = TOINT(reference0[0])
	_XCoord -= 120
	_YCoord = TOINT(reference0[3])
	_YCoord = (_YCoord - 120) //Go up by half Obsi's frame height
	if nowscale > 100
	{
		_YCoord = (_YCoord - nowscale)
	}
	if nowscale < 100
	{
		_YCoord = (_YCoord + nowscale)
	}
	"\1\![move,--X=%(_XCoord),--Y=%(_YCoord),--base=primaryscreen]\s[10]* (Obsidian reemerges from your files.)\e"
}


OnDialogueVars //Variables set in dialogue
{
	case reference0
	{
		when "finishboot"
		{
			booting = 0
		}
		when "holdObsi"
		{
			holdingObsidian = 1
		}
		when "StartScreen"
		{
			watchingScreen = 1
		}
		when "EndScreen"
		{
			watchingScreen = 0
		}
		when "addghost"
		{
			metghosts += ",%(reference1)"
		}
	}
}

OnChoiceSelectEx //This handles any menus I create with loops where the choice selections can't have unique IDs. I have it just direct to other functions so that everything is where it makes sense.
{
	if reference1 == "TooltipTranslation"
	{
		//"\0\s[106]That means %(reference0),\w4 but you can see the translation by hovering over the word instead of clicking.\e"
		//Commenting this out because balloons with tooltips can't be closed. At least this way you can click on the words to dismiss the balloon
	}
	elseif reference1 == "testquizanswer" //Might have to see if I can add another check on this?
	{
		quizinput = reference0
		OnQuizInput
	}
	elseif reference1 == "opencategory"
	{
		currentusercategory = reference0 //See what category the user clicked
		OnUserCategoryDisplay //Display the category based on it, below
	}
	elseif reference1 == "editword"
	{
		OnChoiceEditWord
	}
	elseif reference1 == "deleteword"
	{
		OnChoiceDeleteWord
	}
	elseif reference1 == "deletecategory"
	{
		OnChoiceDeleteCategory
	}
	elseif reference1 == "fontUser"
	{
		teachFont = "%(reference0)"
		teachFontSize = reference2
		OnFontMenu
	}
	elseif reference1 == "fontRemove"
	{
		if teachFont == userfont[reference2]
		{
			teachFont = "Wingdings"
		}
		userfont[reference2] = IARRAY
		userfontsize[reference2] = IARRAY
		"\_q"
		--
		OnRemoveFont
	}
	elseif reference1 == "editFont"
	{
		fontinput = userfont[reference2]
		fontsize = userfontsize[reference2]
		editfont = reference2
		--
		OnFontCheck
	}
	elseif reference1 == "callGhost"
	{
		GhostToCall = reference0
		if reference0 == "S the Skeleton"
		{
			if "RYS-0825" !_in_ ghostexlist
			{
				"\0\s[500]%(t)Certainly##\w4 I'd be glad to call S.]"
				--
				"\![call,ghost,%(GhostToCall)]\e"
			}
			else
			{
				"\0\s[106]%(t)S is already here.]\w8\w8\1%(catnoises).\e"
			}
		}
		elseif reference0 == "Dr. W.D. Gaster"
		{
			if "Gaster" !_in_ ghostexlist
			{
				"\0\s[501]%(t)...\w8\w8Alright##\w4 I'll call him.]"
				--
				"\![call,ghost,%(GhostToCall)]\e"
			}
			else
			{
				"\0\s[200]%(t)He is already here.]\e"
			}
		}
		else
		{
			"\![get,property,OnGhostCallCheck,ghostlist(%(reference0)).sakuraname]" //This gets the Sakura name so we can check if the ghost is already open
		}
	}
}

OnGhostCallCheck
{
	if reference0 !_in_ ghostexlist
	{
		"\0\s[500]%(t)Alright##\w4 I'll call] %(GhostToCall)."
		"\0\s[500]%(t)Certainly##\w4 I'll call] %(GhostToCall)."
		--
		"\![call,ghost,%(GhostToCall)]\e"
		callingGhost = 1
	}
	else
	{
		"\0\s[106]%(t)%(reference0) is already here.]\w8\w8\1%(sCatNoise)\e"
	}
}

OnGhostCallComplete
{
	if callingGhost == 1
	{
		callingGhost = 0
		if reference2 == "S the Skeleton"
		{
			"\0\s[104]%(t)Hello##\w4 S.]\w8\w8\1%(catnoises)~\e"
		}
		elseif reference2 == "Dr. W.D. Gaster"
		{
			"\0\s[206]%(t)Hmm...]\e"
		}
		elseif reference2 == "X. Template"
		{
			"\0\s[102]%(t)Greetings##\w4 X.].\e" //This is not a typo, her first name is 'X.'
		}
		elseif reference2 == "stupid cat"
		{
			"\0\s[104]%(wdf)HELLO KITTY.%(reg)\w8\w8\1%(sCatNoise)\e"
		}
		elseif reference2 == "Sans and Paps"
		{
			"\0\s[208]* (He looks a little wistful...)\w8\w8\n\n\s[104]%(t)Hello##\w4 you two.]\e"
		}
		elseif reference2 == "Ghost Jam Temmie"
		{
			"\0\s[104]%(t)Hello Temmie.]\e"
		}
		else
		{
			"\0\s[0]%(t)Hello##]\w4 %(reference2).\e"
		}
	}
}

OnCheckCaseE //Pick a random case to make the teaching word
{
	teachword = reference0
	if teachWD == "Easy" || teachWD == "Med" || teachWD == "Hard"
	{
		"%(wdn)"
		--
		if tooltips == "On"
		{
			"\q["
		}
		--
		if reference2 == "num"
		{
			if teachNUM == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		elseif reference2 == "punct"
		{
			if teachPUNCT == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		else
		{
			if teachPROPER == "On"
			{
				"%(teachword)"
			}
			if teachUPPER == "On"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
			if teachLOWER == "On"
			{
				teachword = TOLOWER(teachword)
				"%(teachword)"
			}
			if teachPROPER == "Off" && teachUPPER == "Off" && teachLOWER == "Off"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
		}
		--
		if tooltips == "On"
		{
			",TooltipTranslation,teachword]"
		}
		--
		"%(reg)"
	}
	else
	{
		"%(teachword)"
	}
}

OnCheckCaseM //Pick a random case to make the teaching word - Medium difficulty
{
	teachword = reference0
	if teachWD == "Med" || teachWD == "Hard"
	{
		"%(wdn)"
		--
		if tooltips == "On"
		{
			"\q["
		}
		--
		if reference2 == "num"
		{
			if teachNUM == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		elseif reference2 == "punct"
		{
			if teachPUNCT == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		else
		{
			if teachPROPER == "On"
			{
				"%(teachword)"
			}
			if teachUPPER == "On"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
			if teachLOWER == "On"
			{
				teachword = TOLOWER(teachword)
				"%(teachword)"
			}
			if teachPROPER == "Off" && teachUPPER == "Off" && teachLOWER == "Off"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
		}
		--
		if tooltips == "On"
		{
			",TooltipTranslation,teachword]"
		}
		--
		"%(reg)"
	}
	else
	{
		"%(teachword)"
	}
}

OnCheckCaseH //Pick a random case to make the teaching word - Hard difficulty
{
	teachword = reference0
	if teachWD == "Hard"
	{
		"%(wdn)"
		--
		if tooltips == "On"
		{
			"\q["
		}
		--
		if reference2 == "num"
		{
			if teachNUM == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		elseif reference2 == "punct"
		{
			if teachPUNCT == "On"
			{
				"%(teachword)"
			}
			else
			{
				"%(teachword)"
			}
		}
		else
		{
			if teachPROPER == "On"
			{
				"%(teachword)"
			}
			if teachUPPER == "On"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
			if teachLOWER == "On"
			{
				teachword = TOLOWER(teachword)
				"%(teachword)"
			}
			if teachPROPER == "Off" && teachUPPER == "Off" && teachLOWER == "Off"
			{
				teachword = TOUPPER(teachword)
				"%(teachword)"
			}
		}
		--
		if tooltips == "On"
		{
			",TooltipTranslation,teachword]"
		}
		--
		"%(reg)"
	}
	else
	{
		"%(teachword)"
	}
}

On_balloon_tooltip
{
	if reference2 == "teachword"
	{
		"%(reference0)"
	}
	elseif reference1 == "ToggleTooltips"
	{
		"Makes it possible to hover over practice words to see the translation, but will prevent balloons from being closed by double clicking! You can click on words with tooltips if you want to close the balloon."
	}
}

OnUserInputCancel
{
	if "OnConfide" _in_ reference0 || "OnGush" _in_ reference0
	{
		"\0\s[110]Oh,\w4 did you change your mind?\w8\w8\s[102] Alright then,\w4 just let me know if you want to talk.\e"
	}
}

OnWeatherLocation
{
	if curlocation != "" && curlocation != "Set a location"
	{
		"%(wdc)\_q* (Your location is currently set to: %(curlocation))\n\n"
	}
	else
	{
		"%(wdc)\_q"
	}
	--
	"* (Do you live inside or outside the USA?)\n\n/
	\![*]\q[In the USA,OnUSALoc]\n/
    \![*]\q[Outside the USA,OnOtherLoc]\n\n"
	--
	if fromfunctionmenu == 1
	{
		"\![*]\q[Back to functions,OnFunctionMenu]\e"
	}
	else
	{
		"\![*]\q[Back to config,OnTalkConfig]\e"
	}
}


OnUSALoc
{
	templocation = "USA"
    "%(wdc)\![set,balloontimeout,-1]\*\_q* (Please enter your zipcode.)\![open,inputbox,OnLocCode,-1]"
}

OnOtherLoc
{
	templocation = ""
    "%(wdc)\![set,balloontimeout,-1]\*\_q* (Please go to weather.com, search your city, and enter the URL.)\![open,inputbox,OnLocCode,-1]"
}

OnLocCode
{
	if "today/l" _in_ locationcode || templocation == "USA"
	{
		if templocation == "USA"
		{
			locationcode = "https://weather.com/weather/today/l/" + "%(reference0)"
		}
		else
		{
			locationcode = reference0
		}
	}
	else
	{
		"* (That isn't a valid URL, try again.)\![open,inputbox,OnLocCode,-1]\![set,balloontimeout,-1]\e"
	}
	--
	//templocation = ""
	//OnDownloadCurWeather
	"\0\![execute,http-get,%(locationcode),--file=weather.html,--timeout=300]\![execute,http-get,https://zichqec.github.io/s-the-skeleton/weatherregex.html,--async=OnCheckWeatherLoc,--file=weatherregex.html,--timeout=300]%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)\w4\w4\_w[40]\_w[40]\_w[40]\_w[40]\c\0\s[106]I couldn't find your location.\w8\w8 Should I try again?\n\n\![*]\q[Yes,OnWeatherLocation]\n\![*]\q[No,cancelnodialogue]"
	
	
}

OnCheckWeatherLoc
{
  templocation = ""
    _file = "var\\weather.html"
    _file2 = "var\\weatherregex.html"
    _buff=""
    _buff2=""
	
	_reg = ''
    _regloc = '';      _Cregloc = '';      _Fregloc = ''
	
    FCHARSET(1)
	
	tempurature = "Unknown"
	ForC = "Unknown"
	feelslike = "Unknown"
	humidity = "Unknown"
	wind = "Unknown"
	weather = "Unknown"
	pollen = ""
	sunrise = "Unknown"
	sunset = "Unknown"
	phase = "Unknown"

	--
	if FOPEN(_file2,'r')
	{
		for _buff2 = FREAD(_file2); _buff2 != -1; _buff2 = FREAD(_file2)
		{
			if RE_SEARCH (_buff2,'CREG--(.*)--CREG'); {_reg = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGLOC--(.*)--CREGLOC'); {_Cregloc = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGLOC--(.*)--FREGLOC'); {_Fregloc = RE_GETSTR[1]}
		}
	}
	--
	FCLOSE(_file2);
	--
    if FOPEN(_file,'r') {
    
        _buff = FREAD(_file) //get the first line of the HTML to check what type of page we got

        if RE_SEARCH(_buff, _reg) //reg expressions for chrome formatted page
		{
			_regloc = _Cregloc
        }
        else //reg expressions for firefox formatted page
		{
			_regloc = _Fregloc
        }

        for _buff = FREAD(_file); _buff != -1; _buff = FREAD(_file)
		{
			if RE_SEARCH (_buff,_regloc); {templocation = RE_GETSTR[1]} //set location
        }
    }
    --
	FCLOSE(_file);
	--
    if templocation != ""
	{
		"\0\s[0]Your current location is %(templocation).\w8\w8 Is this correct?\n\n/
		\![*]\q[Yes,confirmweather]\n/
		\![*]\q[Enter a different location,OnWeatherLocation]\n/
		\![*]\q[Cancel,cancelnodialogue]"
	}
	else
	{
		"\0\s[106]Couldn't get your location,\w4 do you want to try again?\n\n/
		\![*]\q[Try again,OnWeatherLocation]\n/
		\![*]\q[Cancel,cancelnodialogue]"
	}
}



Select.tryweatherlocagain
{
	"\0\![execute,http-get,%(locationcode),--file=weather.html,--timeout=300]\![execute,http-get,https://zichqec.github.io/s-the-skeleton/weatherregex.html,--async=OnCheckWeatherLoc,--file=weatherregex.html,--timeout=300]%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)\c\0\s[106]I couldn't find your location.\w8\w8 Do you want to try again?\n\n\![*]\q[Yes,OnWeatherLocation]\n\![*]\q[No,cancelnodialogue]"
}

Select.confirmweather
{
	curlocation = templocation
	if fromfunctionmenu == 1
	{
		fromfunctionmenu = 0
		OnDownloadCurWeather
	}
	else
	{
		OnTalkConfig
	}
}


//current weather functions
OnDownloadCurWeather
{
	if weatherquiet == 0
   {
	"\0\![execute,http-get,%(locationcode),--file=weather.html,--timeout=300]\![execute,http-get,https://zichqec.github.io/s-the-skeleton/weatherregex.html,--async=OnCurWeatherFound,--file=weatherregex.html,--timeout=300]%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)\c"
	--
	"\s[106]I couldn't get the weather.\w8\w8 Should I try again?"
	--
	"\n\n\![*]\q[Yes,OnDownloadCurWeather]\n\![*]\q[No,cancelnodialogue]\e"
   }
   else
   {
	   "\0\![execute,http-get,%(locationcode),--file=weather.html,--timeout=300,--nodescript]\![execute,http-get,https://zichqec.github.io/s-the-skeleton/weatherregex.html,--async=OnCurWeatherFound,--file=weatherregex.html,--timeout=300,--nodescript]\b[-1]\e"
   }
   --
   if weatherquiet == 0
   {
	"\c\0\s[106] I couldn't get the weather.\w8\w8 Should I try again?\n\n\![*]\q[Yes,OnDownloadCurWeather]\n\![*]\q[No,cancelnodialogue]"
   }
   else
   {
	   "\b[-1]"
	    tempurature = "Unknown"
		ForC = "Unknown"
		feelslike = "Unknown"
		humidity = "Unknown"
		wind = "Unknown"
		weather = "Unknown"
		pollen = "Unknown"
		phase = "Unknown"
   }
}

OnCurWeatherFound
{ 
    templocation = ""
    _file = "var\\weather.html"
    _file2 = "var\\weatherregex.html"
    _buff=""
    _buff2=""
	
	_reg = '';         _regsunrise = '';   _regsunset = ''
    _regtemp = '';     _Cregtemp = '';     _Fregtemp = ''
    _regdegree = '';   _Cregdegree = '';   _Fregdegree = ''
    _regfeels = '';    _Cregfeels = '';    _Fregfeels = ''
    _reghumidity = ''; _Creghumidity = ''; _Freghumidity = ''
    _regwind = '';     _Cregwind = '';     _Fregwind = ''
    _regstate = '';    _Cregstate = '';    _Fregstate = ''
    _regloc = '';      _Cregloc = '';      _Fregloc = ''
    _regpollen = '';   _Cregpollen = '';   _Fregpollen = ''
	
    FCHARSET(1)
	
	tempurature = "Unknown"
	ForC = "Unknown"
	feelslike = "Unknown"
	humidity = "Unknown"
	wind = "Unknown"
	weather = "Unknown"
	pollen = ""
	sunrise = "Unknown"
	sunset = "Unknown"
	phase = "Unknown"

	--
	if FOPEN(_file2,'r')
	{
		for _buff2 = FREAD(_file2); _buff2 != -1; _buff2 = FREAD(_file2) //This loop scrapes the current regex from my website, to apply to the weather.com page
		{
			if RE_SEARCH (_buff2,'CREG--(.*)--CREG'); {_reg = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGTEMP--(.*)--CREGTEMP'); {_Cregtemp = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGDEGREE--(.*)--CREGDEGREE'); {_Cregdegree = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGFEELS--(.*)--CREGFEELS'); {_Cregfeels = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGHUMIDITY--(.*)--CREGHUMIDITY'); {_Creghumidity = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGWIND--(.*)--CREGWIND'); {_Cregwind = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGSTATE--(.*)--CREGSTATE'); {_Cregstate = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGLOC--(.*)--CREGLOC'); {_Cregloc = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'CREGPOLLEN--(.*)--CREGPOLLEN'); {_Cregpollen = RE_GETSTR[1]}
			//---
			if RE_SEARCH (_buff2,'FREGTEMP--(.*)--FREGTEMP'); {_Fregtemp = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGDEGREE--(.*)--FREGDEGREE'); {_Fregdegree = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGFEELS--(.*)--FREGFEELS'); {_Fregfeels = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGHUMIDITY--(.*)--FREGHUMIDITY'); {_Freghumidity = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGWIND--(.*)--FREGWIND'); {_Fregwind = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGSTATE--(.*)--FREGSTATE'); {_Fregstate = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGLOC--(.*)--FREGLOC'); {_Fregloc = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'FREGPOLLEN--(.*)--FREGPOLLEN'); {_Fregpollen = RE_GETSTR[1]}
			//---
			if RE_SEARCH (_buff2,'REGSUNRISE--(.*)--REGSUNRISE'); {_regsunrise = RE_GETSTR[1]}
			if RE_SEARCH (_buff2,'REGSUNSET--(.*)--REGSUNSET'); {_regsunset = RE_GETSTR[1]}
		}
	}
	--
	FCLOSE(_file2);
	--
    if FOPEN(_file,'r') {
    
        _buff = FREAD(_file) //get the first line of the HTML to check what type of page we got

        if RE_SEARCH(_buff, _reg) //reg expressions for chrome formatted page
		{
			_regtemp = _Cregtemp
			_regdegree = _Cregdegree
			_regfeels = _Cregfeels
			_reghumidity = _Creghumidity
			_regwind = _Cregwind
			_regstate = _Cregstate
			_regloc = _Cregloc
			_regpollen = _Cregpollen
        }
        else //reg expressions for firefox formatted page
		{
			_regtemp = _Fregtemp
			_regdegree = _Fregdegree
			_regfeels = _Fregfeels
			_reghumidity = _Freghumidity
			_regwind = _Fregwind
			_regstate = _Fregstate
			_regloc = _Fregloc
			_regpollen = _Fregpollen
        }

        for _buff = FREAD(_file); _buff != -1; _buff = FREAD(_file)
		{
			if RE_SEARCH (_buff,_regtemp); {tempurature = TOINT(RE_GETSTR[1])} //current temp
			if RE_SEARCH (_buff,_regdegree); {ForC = RE_GETSTR[1]} //degrees (F or C)
			if RE_SEARCH (_buff,_regfeels); {feelslike = TOINT(RE_GETSTR[1])} //feels like temp
			if RE_SEARCH (_buff,_reghumidity); {humidity = TOINT(RE_GETSTR[1])} //humidity
			if RE_SEARCH (_buff,_regwind); {wind = RE_GETSTR[1]} //wind
			if RE_SEARCH (_buff,_regstate); {weather = RE_GETSTR[1]} //state (cloudy, sunny, etc)
			if RE_SEARCH (_buff,_regloc); {curlocation = RE_GETSTR[1]} //set location
			if RE_SEARCH (_buff,_regpollen); {pollen = "There's a local pollen alert."} //search for pollen stuff
			if RE_SEARCH (_buff,_regsunrise); {sunrise = "%(RE_GETSTR[3]) %(RE_GETSTR[4])m"} //Sunrise time
			if RE_SEARCH (_buff,_regsunset); {sunset = "%(RE_GETSTR[3]) %(RE_GETSTR[4])m"} //Sunset time
        }
    }
    --
	FCLOSE(_file);
	--
    if weather _in_ weatherlist
	{
		""
	}
	else
	{
		weatherlist += "%(weather)\n-"
	}
    --
	if weather != ""
	{
		loadmoonnum += 2
		"\![raise,OnDownloadMoonPhase]"
	}
	else
	{
		if weatherquiet == 1
		{
			weatherquiet = 0
			"\e"
		}
		else
		{
			"\0\s[106]Sorry,\w4 something went wrong.\w8\w8\s[0] You should let Zichqec know.\e"
		}
	}

}


OnDownloadMoonPhase
{
    "\0\![execute,http-get,https://www.moongiant.com/phase/today/,--async=OnMoonFound,--file=moon.html,--timeout=200]"
}

OnMoonFound
{
    //file to be read
    _file = "var\\moon.html"
    //line being read
    _buff=""
    //regular expressions to extract data
    _regphase=',"Phase: <span>([\w|\s]*)<./span>'
    _found = 0;
    //using UTF-8 charset
    FCHARSET(1)
    
    //string for holding phase
    phase = ""
    

    
    --
    
    if FOPEN(_file,'r') {
        for _buff = FREAD(_file); _buff != -1 && !_found; _buff = FREAD(_file) {
            

            if RE_SEARCH ( _buff, _regphase ) {
                
                phase = RE_GETSTR[1]
                _found = 1; //break loop since we dont need to continue parsing
                
            }
        }
    }
    --
    
    FCLOSE(_file);
    
	--
    if weatherquiet
	{
        weatherquiet = 0
        --
        "\e"
    }
    
    --
	//change the dialogue as you wish
	//[temp, degrees, feels like temp, humidity, wind, state (cloudy, rainy, etc)]
	
	"\0%(wdcb)\s[500]\_qThe weather for %(curlocation):\n\nWeather: %(weather)\nTemperature: %(tempurature)%(ForC)\nFeels like: %(feelslike)%(ForC)/
    \nHumidity: %(humidity)%\nWind: %(wind)"
	--
	if pollen == "There's a local pollen alert."
	{
		"\n\n%(pollen)"
	}
	--
	"\n\nSunrise: %(sunrise)\nSunset: %(sunset)\nMoon Phase: %(phase)"
	
	--
	if fromfunctionmenu == 1
	{
		"\n\n\![*]\q[Back to functions,OnFunctionMenu]"
	}
	else
	{
		"\n"
	}
	--
	"\n\![*]\q[I'm done,cancelnodialogue]\e"
	

}

//Ok so I'm kinda proud of this. Any sentences that I want to have teach words in them, I just stick the whole thing into an embed that calls this function. This function divides up the words by spaces, picks a random one, and adds the teach formatting to it!
OnRandomTeachWord
{
	if WDOnly == 0
	{
		talkarray = reference0
		talkarray = REPLACE(talkarray," ","|")
		//talkarray = REPLACE(talkarray,"]","\]")
		//talkarray = REPLACE(talkarray,"\","\\")
		
		SETDELIM(talkarray,"|")
		talkarraysize = ARRAYSIZE(talkarray)
		
		_rand1 = RAND(talkarraysize)
		_rand2 = RAND(talkarraysize)
		_rand3 = RAND(talkarraysize)
		_rand4 = RAND(talkarraysize)
		
		if "##" !_in_ talkarray[_rand1] && "\" !_in_ talkarray[_rand1]
		{
			_wordtoreplace1 = ("$E-" + "%(talkarray[_rand1])" + "-$")
			talkarray[_rand1] = _wordtoreplace1
		}
		if _rand2 != _rand1 && "##" !_in_ talkarray[_rand2] && "\" !_in_ talkarray[_rand2]
		{
			_wordtoreplace2 = ("$M-" + "%(talkarray[_rand2])" + "-$")
			talkarray[_rand2] = _wordtoreplace2
		}
		if _rand3 != _rand1 && _rand3 != _rand2 && "##" !_in_ talkarray[_rand3] && "\" !_in_ talkarray[_rand3]
		{
			_wordtoreplace3 = ("$H-" + "%(talkarray[_rand3])" + "-$")
			talkarray[_rand3] = _wordtoreplace3
		}
		if _rand4 != _rand1 && _rand4 != _rand2 && _rand4 != _rand3 && "##" !_in_ talkarray[_rand4] && "\" !_in_ talkarray[_rand4]
		{
			_wordtoreplace4 = ("$H-" + "%(talkarray[_rand4])" + "-$")
			talkarray[_rand4] = _wordtoreplace4
		}
		talkarray = REPLACE(talkarray,"##","%(CHR(0x2C))")
		
		SETDELIM(talkarray," ")
		reference0 = REPLACE(talkarray,"|"," ")
		"%(reference0)"
	}
	else
	{
		reference0 = REPLACE(reference0,"##","%(CHR(0x2C))")
		"%(reference0)"
	}
}