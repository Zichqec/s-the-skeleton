//---------------------------Envelopes--------------------------

ingredients
{
	"cilantro"
	"basil"
	"lemon pepper"
	"cloves"
	"chives"
	"butter"
	"salt"
	"paprika"
	"sugar"
	"cinnamon"
	"pepper"
	"lemon"
	"orange zest"
	"lemon zest"
	"cumin"
	"mint"
	"garlic"
	"curry powder"
	"chili powder"
	//"dried peppers"
	"nutmeg"
	"ginger"
	"mustard"
	"tumeric"
	"thyme"
	"rosemary"
	"allspice"
	"dill weed"
	"horseradish"
	"oregano"
	"sesame seeds"
	"peppermint"
	//"peppers"
	"sage"
	"vanilla"
	"wasabi"
	"lime"
	"parsley"
}

fruveg
{
	"grapefruit"
	"apple"
	"pear"
	"grape"
	"orange"
	"banana"
	"tomato"
	"cucumber"
	"avocado"
	"pickle"
	"cherry"
	"brocolli"
	"lettuce"
	"celery"
	"pineapple"
	"mango"
	"honeydew"
	"cantaloupe"
	"raspberry"
	"blueberry"
	"blackberry"
	"watermelon"
}

fruvegs
{
	"grapefruits"
	"apples"
	"pears"
	"grapes"
	"oranges"
	"bananas"
	"tomatoes"
	"cucumbers"
	"avocados"
	"pickles"
	"cherries"
	"brocolli"
	"lettuce"
	"celery stalks"
	"pineapples"
	"mangoes"
	"honeydews"
	"cantaloupes"
	"raspberries"
	"blueberries"
	"blackberries"
	"watermelons"
}

bakedgoods
{
	"bread"
	"cookies"
	"cupcakes"
	"pie"
	"cheesecake"
	"dinner rolls"
	"breadsticks"
	"biscuits"
	"muffins"
	"brownies"
	"cake"
	"strudel"
	"cinnamon rolls"
	"turnovers"
	"pumpkin bread"
	"banana bread"
	"monkey bread"
	"pumpkin roll"
	"buckeyes"
	"oreo balls"
	"sugar cookies"
	"peanut butter pancakes"
	//"mousse"
	"pumpkin cheesecake"
	"oreo cheesecake"
}

family
{
	"anWD"
	"anDings"
	"anWings"
	"anBarcode"
	"anBlue"
	"anAbbi"
	"anRosie"
	"anRoman"
	"anCambria"
	"anTriton"
	"anLulo"
	"anAzo"
	"anSigil"
	"anElko"
}

usersfolder
{
	"start bar"
	"Documents folder"
	"Pictures folder"
	"Music folder"
	"Games folder"
}

filetype
{
	".txt"
	".dic"
	".png"
	".jpg"
	".jpeg"
	".mp3"
	".exe"
	".bat"
	".cfg"
	".wav"
	".pdf"
	".dat"
	".gif"
	".tiff"
	".dll"
	".pna"
	".ico"
	".dau"
	".zip"
	".nar"
	".html"
	".psd"
	".mp4"
	".ttf"
}

musicfile
{
	".mp3"
	".wav"
	".flac"
	".ogg"
	".wma"
	".m4a"
	".mid"
}

colormod
{
	{
		"light "
		"dark "
		"bright "
		"soft "
		"desaturated "
		"saturated "
		"intense "
		"shimmery "
		"glittery "
		"brilliant "
		"bold "
		"dusty "
		"mellow "
		"rich "
		"vibrant "
		"vivid "
		"faded "
		"pale "
		"rustic "
	}
	{
		""
	}
}

colormodC
{
	{
		", "
		--
		"light "
		"dark "
		"bright "
		"soft "
		"desaturated "
		"saturated "
		"intense "
		"shimmery "
		"glittery "
		"brilliant "
		"bold "
		"dusty "
		"mellow "
		"rich "
		"vibrant "
		"vivid "
		"faded "
		"pale "
		"rustic "
	}
	{
		" "
	}
}

color
{
	"red"
	"orange"
	"yellow"
	"green"
	"cyan"
	"blue"
	"purple"
	"pink"
	"gray"	
}

fcolor //flower colors
{
	"red"
	"orange"
	"yellow"
	"light blue"
	"blue"
	"violet"
	"pink"
	"white"
	"white and purple"
	"blue and white"
}

pattern
{
	{
		""
	}
	{
	" with "
	--
	"a cutesy heart print"
	"a zany bone pattern"
	"an adorable cat-and-dog print"
	"a cute pawprint pattern"
	"a soothing plaid pattern"
	"crazy polka dots"
	"simple stripes"
	"a mesmerizing galaxy print"
	}
}

animal //plushes -- I've excluded some so that I could write specific dialogue about them
{
	"dog"
	"elephant"
	"turtle"
	"tortoise"
	"fish"
	"bird"
	"dragon"
	"panda"
	"bear"
	"bee"
	"butterfly"
	"tiger"
	"lion"
	"kangaroo"
	"giraffe"
	"antelope"
	"mouse"
	"duck"
	"bunny"
	"penguin"
	"alligator"
	"crocodile"
}

RYSIdle
{
	//"\s[2000]"
	"\s[2001]"
	"\s[2002]"
	//"\s[2003]"
	"\s[2004]"
	"\s[2005]"
	//"\s[2006]"
	"\s[2007]"
	"\s[2008]"
	"\s[2013]"
	if RYStrust > 100
	{
		"\s[2020]"
		"\s[2022]"
	}
}

default {"\f[color,default]"}
purple {"\f[color,183,129,227]"}
teal {"\f[color,132,184,180]"}
red {"\f[color,227,142,142]"}
orange {"\f[color,227,147,093]"}
green {"\f[color,064,180,103]"}
yellow {"\f[color,212,206,071]"}
blue {"\f[color,141,136,247]"}
cyan {"\f[color,122,218,232]"}
pink {"\f[color,246,171,247]"}
brown {"\f[color,181,153,094]"}


sleepchance
{
	_temp = 1
	--
	if timeslot == "afternoon"  //Afternoon nap
	{
		_temp += 2
	}
	elseif timeslot == "latenight" || timeslot == "midnight" //Sleepy at night
	{
		_temp += 4
	}
	elseif timeslot == "earlymorning" || timeslot == "morning" //More awake in the mornings
	{
		_temp -= 1
	}
	--
	if recentpets > 5 //If you've pet him a bunch recently
	{
		_temp += 2
	}
	--
	_temp -= sleephour
	if _temp < 0; _temp = 0
	--
	"%(_temp)"
}

wakechance
{
	_temp = 1
	--
	if timeslot == "earlymorning" || timeslot == "morning"
	{
		_temp += 2
	}
	elseif timeslot == "latenight" || timeslot == "midnight"
	{
		_temp -= 4
	}
	elseif timeslot == "afternoon"
	{
		_temp -= 2
	}
	--
	_temp -= recentpets
	_temp += sleephour
	if _temp <= 0
	{
		_temp = 1
	}
	--
	"%(_temp)"
}

etcwake
{
	"\0* (You nudge him gently.)\w8\w8\n\n"
	"\0* (You wake him gently.)\w8\w8\n\n"
	"\0* (You wake him softly.)\w8\w8\n\n"
	"\0* (You nudge him softly.)\w8\w8\n\n"
	--
	"\s[109]...%(mumb)...?\w8\w8 Hm..?\w8\w8 "
	"\s[109]...%(mumb)...?\w8\w8 What..?\w8\w8 "
	"\s[109]...%(mumb)...?\w8\w8 Oh,\w4 %(username)..?\w8\w8 "
}

//Copied from Lulo
sleepmumble
{
	"...zzz... mm..."
	"...zzhh..."
	"...mmmn..."
	"...hhnmmf..."
	"...zzhnhm..."
	"...zzz..."
	"...zzrmnh..."
	"...mmnnh..."
}

mumble
{
	"%(mumble2)%(mumble2)"
	"%(mumble2)%(mumble2)%(mumble2)"
}

mumble2
{
	"zz"
	"mmf"
	"zgh"
	"fmm"
	"mkffn"
	"nnm"
	"rhm"
	"rmh"
	"mrf"
	"ghhnz"
	"fzz"
	"mzz"
	"zmm"
	"zll"
	"nzz"
	"zzr"
	"zzz"
	"zzk"
	"mmk"
	"zfk"
	"drf"
	"dzznm"
	"znnmf"
	"dzm"
	"dzk"
	"frm"
	"zz... %(mumb)"
	"mm... %(mumb)"
	"krf..? %(mumb)"
	"mnn... %(mumb)"
}

mumb
{
	"zkm"
	"frm"
	"lrnm"
	"zzm"
	"fhngk"
	
	"zz"
	"mmf"
	"zgh"
	"fmm"
	"mkffn"
	"nnm"
	"rhm"
	"rmh"
	"mrf"
	"ghhnz"
	"fzz"
	"mzz"
	"zmm"
	"zll"
	"nzz"
	"zzr"
	"zzz"
	"zzk"
	"mmk"
	"zfk"
	"drf"
	"dzznm"
	"znnmf"
	"dzm"
	"dzk"
	"frm"
}

dreammumb
{
	""
	"...%(mumb)...\w8\w8 "
}

dreammumb2
{
	"\w8\w8 %(mumb)...\e"
	"\e"
}

//---Menu Envelopes---

displayhour
{
	if hour12 == 0; "12"
	else; "%(hour12)"
}

displaymin
{
	if passmin <= 9; "0%(passmin)"
	else; "%(passmin)"
}

wd
{
	if weekday == 0; "Sun"
	elseif weekday == 1; "Mon"
	elseif weekday == 2; "Tue"
	elseif weekday == 3; "Wed"
	elseif weekday == 4; "Thu"
	elseif weekday == 5; "Fri"
	else; "Sat"
}

displayweekday
{
	if weekday == 0; "Sunday"
	elseif weekday == 1; "Monday"
	elseif weekday == 2; "Tuesday"
	elseif weekday == 3; "Wednesday"
	elseif weekday == 4; "Thursday"
	elseif weekday == 5; "Friday"
	else; "Saturday"
}

displaymonth
{
	if month == 1; "January"
	elseif month == 2; "February"
	elseif month == 3; "March"
	elseif month == 4; "April"
	elseif month == 5; "May"
	elseif month == 6; "June"
	elseif month == 7; "July"
	elseif month == 8; "August"
	elseif month == 9; "September"
	elseif month == 10; "October"
	elseif month == 11; "November"
	else; "December"
}

//Turns out yaya tracks the am and pm for you... ampm is 0 during am, and 1 during pm
ap
{
 	if ampm == 0; "AM"
 	else; "PM"
}

//This is figuring out the minute
nowmin
{
	if minute >= 0 && minute <=9; "0%(minute)"
	else; "%(minute)"
}

//This is figuring out the hour
nowhour
{
	if hour12 == 0; "1"
	else; "%(hour12)"
}

season
{
	//[Zi]Ok, so first off, apologies to folks in the southern hemisphere. I may add functionality for that in a later update. But to be fair, S probably doesn't know about the concept yet. Second off, I'm going to go by the meteorological seasons instead of astronomical. Why? Well..... one has static dates and the other does not. I can't give him diaogue for things like the solstice and equinox if they change every year. I COULD technically do it, but I'd have to update him every year to change the dates and that sounds terrible. SO. We're just getting a simple system instead.
	if month > 2 && month < 6; "Spring"
	elseif month > 5 && month < 9; "Summer"
	elseif month > 8 && month < 12; "Autumn"
	else; "Winter"
}

GetTimeSlot
{
	if hour >= 5 && hour <= 8; "earlymorning"
	elseif hour >= 9 && hour <= 11; "morning"
	elseif hour >= 12 && hour <= 14; "lunch"
	elseif hour >= 15 && hour <= 17; "afternoon"
	elseif hour >= 18 && hour <= 20; "evening"
	elseif hour >= 21 && hour <= 24; "latenight"
	else; "midnight"
}

//dayslot
GetDaySlot
{
	//"%(month)/%(day)" I want to change to this but I'll have to deal with people's birthdays being formatted wrong
	"%(month)month %(day)day"
}

temp
{
	if Degrees[1] == "°F"
	{
		if feelslike[0] <= 0; "Below Zero" //Below zero, 0 and below
		elseif feelslike[0] <= 20; "Freezing" //Freezing, 0-20
		elseif feelslike[0] <= 40; "Cold" //Cold, 21-40
		elseif feelslike[0] <= 60; "Chilly" //Chilly, 41-60
		elseif feelslike[0] <= 80; "Pleasant" //Pleasant, 61-80
		elseif feelslike[0] <= 95; "Hot" //Hot, 81-95
		elseif feelslike[0] >= 96; "Boiling"  //Everything is terrible, 96+
		else; "Unknown"
	}
	elseif Degrees[1] == "°C"
	{
		if feelslike[0] <= -17; "Below Zero" //Below zero, 0 and below
		elseif feelslike[0] <= -6; "Freezing" //Freezing, 0-20
		elseif feelslike[0] <= 4; "Cold" //Cold, 21-40
		elseif feelslike[0] <= 15; "Chilly" //Chilly, 41-60
		elseif feelslike[0] <= 26; "Pleasant" //Pleasant, 61-80
		elseif feelslike[0] <= 35; "Hot" //Hot, 81-95
		elseif feelslike[0] >= 36; "Boiling" //Everything is terrible, 96+
		else; "Unknown"
	}
	else
	{
		"Unknown"
	}
}

humid
{
	if humidity == "Unknown"; "Unknown"
	elseif humidity <= 30; "Dry" //Dry
	elseif humidity > 30 && humidity <= 60; "Comfortable" //Comfortable
	elseif humidity >= 61 && humidity <= 80; "Muggy" //Muggy
	elseif humidity >= 81; "Soup" //Soup
	else; "Unknown"
}

moonphase
{
	if phase == "New Moon"; "anMoon01"
	elseif phase == "Waxing Crescent"; "anMoon02"
	elseif phase == "First Quarter"; "anMoon03"
	elseif phase == "Waxing Gibbous"; "anMoon04"
	elseif phase == "Full Moon"; "anMoon05"
	elseif phase == "Waning Gibbous"; "anMoon06"
	elseif phase == "Last Quarter"; "anMoon07"
	elseif phase == "Waning Crescent"; "anMoon08"
	else; "anMoon09"
}

loadingmoon
{
	"%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)"
	--
	"%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)"
	--
	"%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)"
	--
	"%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)%(lm)"
	--
	"\_w[160]"
}

lm : sequential //Changed the loadingmoon thing to just use sequential, it's less prone to bugs and means I don't need a variable!
{
	"\_b[img\Moon01,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon02,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon03,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon04,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon05,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon06,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon07,inline,--option=use_self_alpha]\w4\c"
	"\_b[img\Moon08,inline,--option=use_self_alpha]\w4\c"
}

/*loadingmoon
{
	"\_b[img\Moon0%(loadmoonnum),inline,--option=use_self_alpha]\w4\c"
	--
	if loadmoonnum < 8
	{
		loadmoonnum++
	}
	else
	{
		loadmoonnum = 1
	}
}*/


/*OnLoadA
{
	"%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)\![raise,OnLoadB]"
}
//These make an infinite loop... but I'm pretty sure they'll interrupt whatever is actually loading XD Idk I'll play around with this at some point
OnLoadB
{
	"%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)%(loadingmoon)\![raise,OnLoadA]"
}*/


km //Kero choice marker. If the balloon being used is the default one, use the special marker, and if not then use the default marker - Don't need this anymore thanks to an SSP update, but I'll leave the code here for posterity
{
	if nowballoon == "Purple Soul" 
	{
		"\_b[img/km.png,inline,--option=use_self_alpha] "
	}
	else
	{
		"\![*]"
	}
}


//**** Don't touch this ***************************************************************
//This is code stuff and nothing for you to worry about, just save the .dic and move on! You're done!
 
On_\person
{
 	person
}

//I've put this in mostly for myself because I currently live with people who would not approve of S being married to a guy. I'm probably not gonna put a toggle in his menu for this, but if you want to use it just open script input and put in %(staysafe = 1)
StSfhim //him
{
	if staysafe == 1; "her"
	else; "him"
}

StSfHe //He
{
	if staysafe == 1; "she"
	else; "he"
}

StSfCHe //Capital He
{
	if staysafe == 1; "She"
	else; "He"
}

StSfhis //his
{
	if staysafe == 1; "her"
	else; "his"
}

StSfhusband //husband
{
	if staysafe == 1; "wife"
	else; "husband"
}

StSfanhusband //husband but with anchor text...
{
	if staysafe == 1; "anwife"
	else; "anhusband"
}

StSffather
{
	if staysafe == 1; "mother"
	else; "father"
}

StSfdad
{
	if staysafe == 1; "mom"
	else; "dad"
}







//Moved this over to word.dic. This isn't an envelope, but this should keep it out of the way but also easy to reach for setting variables...

//Thank you again to Levidre for this, this makes my life so much easier. This function can be called with Raise at the end of any random piece of dialogue. \!raise,OnDialogueVariables,value]. The word value there can be replaced with whatever I want, letting me test to see which variable should be set. This solves SO MUCH. I KNEW there had to be a way to make this work easier.
OnDialogueVariables
{
	if reference0 == "8kids"
	{
		thatsanoddnumber = 1
	}
	elseif reference0 == "learntimeline"
	{
		askedabouttimelines = 1
	}
	elseif reference0 == "learnfamily"
	{
		knowaboutfamily = 1
	}
	elseif reference0 == "complimentdusty"
	{
		specialcommu = 1
		complimentaboutdusty = 1
		OnCommunicate //This'll put him over into communication without setting the flag for him talking first
	}
	elseif reference0 == "gummyfrogs"
	{
		love -= 1 //not actually taking a point away, just making it so you get net 0 if you get this option
	}
	elseif reference0 == "getonphone"
	{
		lookingatphone = 1
	}
	elseif reference0 == "getoffphone"
	{
		lookingatphone = 0
	}
	elseif reference0 == "discoverkit"
	{
		knowaboutkit = 1
	}
	elseif reference0 == "discoversmol"
	{
		knowaboutsmol = 1
	}
	elseif reference0 == "discoverbirdy"
	{
		knowaboutbirdy = 1
	}
	elseif reference0 == "discoversorrel"
	{
		knowaboutsorrel = 1
	}
	elseif reference0 == "discoverpmd"
	{
		knowaboutpmd = 1
	}
	elseif reference0 == "discoverbender"
	{
		knowaboutbender = 1
	}
	elseif reference0 == "discovernine"
	{
		knowaboutnine = 1
	}
	elseif reference0 == "discoverserif"
	{
		knowaboutserif = 1
	}
	elseif reference0 == "discoverecho"
	{
		knowaboutecho = 1
	}
	elseif reference0 == "discoverice"
	{
		knowaboutice = 1
	}
	elseif reference0 == "discoveromega"
	{
		knowaboutomega = 1
	}
	elseif reference0 == "dustyspaceandtime"
	{
		specialcommu = 1
		dustyspaceandtime = 1
		OnCommunicate
	}
	elseif reference0 == "abbiisblind"
	{
		abbiblind = 1
	}
	elseif reference0 == "getadrinkw"
	{
		currentlydrinking = 1
	}
	elseif reference0 == "getadrinkj"
	{
		currentlydrinking = 2
	}
	elseif reference0 == "getadrinkm"
	{
		currentlydrinking = 3
	}
	elseif reference0 == "knowRYS"
	{
		askedWhoRYS = 1
		RYSprogress++
	}
	elseif reference0 == "learnABI"
	{
		knowaboutABI = 1
	}
	elseif reference0 == "suppressCoordsOn"
	{
		suppressCoords = 1
	}
	elseif reference0 == "suppressCoordsOff"
	{
		suppressCoords = 0
	}
	elseif reference0 == "givesocks"
	{
		givensocks++
	}
	elseif reference0 == "giveblanket"
	{
		givenblankets++
	}
	elseif reference0 == "givemittens"
	{
		givenmittens++
	}
	elseif reference0 == "switchS"
	{
		nowmode = "Default"
	}
	elseif reference0 == "switchRYS"
	{
		nowmode = "RYS"
	}
	elseif reference0 == "talkDusty"
	{
		res_reference0 = "Dusty"
	}
	elseif reference0 == "wakeup"
	{
		nowmode = "Default"
		recentnightmare = 1
	}
}